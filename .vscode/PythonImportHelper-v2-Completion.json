[
    {
        "label": "rest_framework",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework",
        "description": "rest_framework",
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "TimeRecord",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "TimeRecord",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "Role",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "UserProject",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "TimeRecord",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "UserTask",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "Currency",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "Task",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "TimeRecord",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "UserProject",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "UserTask",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "Role",
        "importPath": "workspace.models",
        "description": "workspace.models",
        "isExtraImport": true,
        "detail": "workspace.models",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "connection",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "connection",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "connection",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "struct",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "struct",
        "description": "struct",
        "detail": "struct",
        "documentation": {}
    },
    {
        "label": "start",
        "importPath": "tracemalloc",
        "description": "tracemalloc",
        "isExtraImport": true,
        "detail": "tracemalloc",
        "documentation": {}
    },
    {
        "label": "start",
        "importPath": "tracemalloc",
        "description": "tracemalloc",
        "isExtraImport": true,
        "detail": "tracemalloc",
        "documentation": {}
    },
    {
        "label": "NullBooleanField",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "NullBooleanField",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "patch",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "Mock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "patch",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "Mock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "gmtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strptime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "gmtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "struct_time",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "gmtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strptime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "gmtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "struct_time",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "localtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "sleep",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "TimeRecordQuerySet",
        "importPath": "workspace.querysets",
        "description": "workspace.querysets",
        "isExtraImport": true,
        "detail": "workspace.querysets",
        "documentation": {}
    },
    {
        "label": "TimeRecordQuerySet",
        "importPath": "workspace.querysets",
        "description": "workspace.querysets",
        "isExtraImport": true,
        "detail": "workspace.querysets",
        "documentation": {}
    },
    {
        "label": "TimeRecordQuerySet",
        "importPath": "workspace.querysets",
        "description": "workspace.querysets",
        "isExtraImport": true,
        "detail": "workspace.querysets",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "ReadOnlyPasswordHashField",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "get_objects",
        "importPath": "gc",
        "description": "gc",
        "isExtraImport": true,
        "detail": "gc",
        "documentation": {}
    },
    {
        "label": "collect",
        "importPath": "gc",
        "description": "gc",
        "isExtraImport": true,
        "detail": "gc",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "QuerySet",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "DecimalField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ExpressionWrapper",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Func",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "QuerySet",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "SAFE_METHODS",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "SAFE_METHODS",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "AllowAny",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminUser",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "DjangoModelPermissions",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "read",
        "importPath": "asyncore",
        "description": "asyncore",
        "isExtraImport": true,
        "detail": "asyncore",
        "documentation": {}
    },
    {
        "label": "require",
        "importPath": "pkg_resources",
        "description": "pkg_resources",
        "isExtraImport": true,
        "detail": "pkg_resources",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic.edit",
        "description": "django.views.generic.edit",
        "isExtraImport": true,
        "detail": "django.views.generic.edit",
        "documentation": {}
    },
    {
        "label": "ListAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "ListCreateAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "RetrieveUpdateDestroyAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "GenericViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "AddUserProjectSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "CreateProjectSerializers",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ListUserSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ProjectDetailSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ProjectSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TaskSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TimeRecordSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TimeRecordStartSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateProjectSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "UserProjectSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ProjectTaskSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ListProjectsSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "UserTaskSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "AddUserTaskSerializer",
        "importPath": "workspace.serializers",
        "description": "workspace.serializers",
        "isExtraImport": true,
        "detail": "workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "GenericForeignKey",
        "importPath": "django.contrib.contenttypes.fields",
        "description": "django.contrib.contenttypes.fields",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.fields",
        "documentation": {}
    },
    {
        "label": "GenericForeignKey",
        "importPath": "django.contrib.contenttypes.fields",
        "description": "django.contrib.contenttypes.fields",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.fields",
        "documentation": {}
    },
    {
        "label": "GenericForeignKey",
        "importPath": "django.contrib.contenttypes.fields",
        "description": "django.contrib.contenttypes.fields",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.fields",
        "documentation": {}
    },
    {
        "label": "GenericForeignKey",
        "importPath": "django.contrib.contenttypes.fields",
        "description": "django.contrib.contenttypes.fields",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.fields",
        "documentation": {}
    },
    {
        "label": "debug_toolbar",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "debug_toolbar",
        "description": "debug_toolbar",
        "detail": "debug_toolbar",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "order_created",
        "importPath": "store.signals",
        "description": "store.signals",
        "isExtraImport": true,
        "detail": "store.signals",
        "documentation": {}
    },
    {
        "label": "order_created",
        "importPath": "store.signals",
        "description": "store.signals",
        "isExtraImport": true,
        "detail": "store.signals",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "GenericTabularInline",
        "importPath": "django.contrib.contenttypes.admin",
        "description": "django.contrib.contenttypes.admin",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.admin",
        "documentation": {}
    },
    {
        "label": "GenericTabularInline",
        "importPath": "django.contrib.contenttypes.admin",
        "description": "django.contrib.contenttypes.admin",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "importPath": "store.admin",
        "description": "store.admin",
        "isExtraImport": true,
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "ProductImageInline",
        "importPath": "store.admin",
        "description": "store.admin",
        "isExtraImport": true,
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "TaggedItem",
        "importPath": "tags.models",
        "description": "tags.models",
        "isExtraImport": true,
        "detail": "tags.models",
        "documentation": {}
    },
    {
        "label": "TaggedItem",
        "importPath": "tags.models",
        "description": "tags.models",
        "isExtraImport": true,
        "detail": "tags.models",
        "documentation": {}
    },
    {
        "label": "TaggedItem",
        "importPath": "tags.models",
        "description": "tags.models",
        "isExtraImport": true,
        "detail": "tags.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "tags.models",
        "description": "tags.models",
        "isExtraImport": true,
        "detail": "tags.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Collection",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Collection",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Collection",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "core.models",
        "description": "core.models",
        "isExtraImport": true,
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "HttpUser",
        "importPath": "locust",
        "description": "locust",
        "isExtraImport": true,
        "detail": "locust",
        "documentation": {}
    },
    {
        "label": "task",
        "importPath": "locust",
        "description": "locust",
        "isExtraImport": true,
        "detail": "locust",
        "documentation": {}
    },
    {
        "label": "between",
        "importPath": "locust",
        "description": "locust",
        "isExtraImport": true,
        "detail": "locust",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "celery",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "celery",
        "description": "celery",
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "Celery",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "mail_admins",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "BadHeaderError",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "EmailMessage",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "BaseEmailMessage",
        "importPath": "templated_mail.mail",
        "description": "templated_mail.mail",
        "isExtraImport": true,
        "detail": "templated_mail.mail",
        "documentation": {}
    },
    {
        "label": "Max",
        "importPath": "django.db.models.aggregates",
        "description": "django.db.models.aggregates",
        "isExtraImport": true,
        "detail": "django.db.models.aggregates",
        "documentation": {}
    },
    {
        "label": "Min",
        "importPath": "django.db.models.aggregates",
        "description": "django.db.models.aggregates",
        "isExtraImport": true,
        "detail": "django.db.models.aggregates",
        "documentation": {}
    },
    {
        "label": "Avg",
        "importPath": "django.db.models.aggregates",
        "description": "django.db.models.aggregates",
        "isExtraImport": true,
        "detail": "django.db.models.aggregates",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models.aggregates",
        "description": "django.db.models.aggregates",
        "isExtraImport": true,
        "detail": "django.db.models.aggregates",
        "documentation": {}
    },
    {
        "label": "Concat",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "APIClient",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "api_client",
        "importPath": "store.tests.conftest",
        "description": "store.tests.conftest",
        "isExtraImport": true,
        "detail": "store.tests.conftest",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "store.tests.conftest",
        "description": "store.tests.conftest",
        "isExtraImport": true,
        "detail": "store.tests.conftest",
        "documentation": {}
    },
    {
        "label": "create_collection",
        "importPath": "store.tests.test_collections",
        "description": "store.tests.test_collections",
        "isExtraImport": true,
        "detail": "store.tests.test_collections",
        "documentation": {}
    },
    {
        "label": "baker",
        "importPath": "model_bakery",
        "description": "model_bakery",
        "isExtraImport": true,
        "detail": "model_bakery",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "urlencode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "validate_file_size",
        "importPath": "store.validators",
        "description": "store.validators",
        "isExtraImport": true,
        "detail": "store.validators",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "isExtraImport": true,
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "isExtraImport": true,
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "isExtraImport": true,
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "SimpleRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework_nested",
        "description": "rest_framework_nested",
        "isExtraImport": true,
        "detail": "rest_framework_nested",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "importPath": "store.views",
        "description": "store.views",
        "isExtraImport": true,
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "context",
        "importPath": "multiprocessing",
        "description": "multiprocessing",
        "isExtraImport": true,
        "detail": "multiprocessing",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "SearchFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "OrderingFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "ListModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "CreateModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "RetrieveModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "DestroyModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "UpdateModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "FullDjangoModelPermissions",
        "importPath": "store.permissions",
        "description": "store.permissions",
        "isExtraImport": true,
        "detail": "store.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "importPath": "store.permissions",
        "description": "store.permissions",
        "isExtraImport": true,
        "detail": "store.permissions",
        "documentation": {}
    },
    {
        "label": "ViewCustomerHistoryPermission",
        "importPath": "store.permissions",
        "description": "store.permissions",
        "isExtraImport": true,
        "detail": "store.permissions",
        "documentation": {}
    },
    {
        "label": "crontab",
        "importPath": "celery.schedules",
        "description": "celery.schedules",
        "isExtraImport": true,
        "detail": "celery.schedules",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "importlib.resources",
        "description": "importlib.resources",
        "isExtraImport": true,
        "detail": "importlib.resources",
        "documentation": {}
    },
    {
        "label": "ProjectSerializers",
        "kind": 6,
        "importPath": "app-with-david.clockify.api.serializers",
        "description": "app-with-david.clockify.api.serializers",
        "peekOfCode": "class ProjectSerializers(serializers.ModelSerializer):\n  class Meta:\n    model = Project\n    fields = '__all__'",
        "detail": "app-with-david.clockify.api.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app-with-david.clockify.api.urls",
        "description": "app-with-david.clockify.api.urls",
        "peekOfCode": "urlpatterns = [\n  path('api/', views.getData),\n  path('add/', views.addProject)\n]",
        "detail": "app-with-david.clockify.api.urls",
        "documentation": {}
    },
    {
        "label": "getData",
        "kind": 2,
        "importPath": "app-with-david.clockify.api.views",
        "description": "app-with-david.clockify.api.views",
        "peekOfCode": "def getData(request):\n    # person = {'name':'Hanka'}\n    projects = Project.objects.all()\n    serializer = ProjectSerializers(projects, many=True)\n    return Response(serializer.data)\n@api_view(['POST'])\ndef addProject(request):\n    serializer = ProjectSerializers(data=request.data)\n    if serializer.is_valid():\n        serializer.save()",
        "detail": "app-with-david.clockify.api.views",
        "documentation": {}
    },
    {
        "label": "addProject",
        "kind": 2,
        "importPath": "app-with-david.clockify.api.views",
        "description": "app-with-david.clockify.api.views",
        "peekOfCode": "def addProject(request):\n    serializer = ProjectSerializers(data=request.data)\n    if serializer.is_valid():\n        serializer.save()\n    return Response(serializer.data)",
        "detail": "app-with-david.clockify.api.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.asgi",
        "description": "app-with-david.clockify.clockify.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "app-with-david.clockify.clockify.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-wa_q^(3-j2lt5n&rw$6y^(&km)d&y(#j&hu)m!=j6z0p8d$t7+\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-wa_q^(3-j2lt5n&rw$6y^(&km)d&y(#j&hu)m!=j6z0p8d$t7+\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"djoser\",",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"djoser\",\n    'debug_toolbar',\n    \"rest_framework\",",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = \"bootstrap4\"\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n]",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "ROOT_URLCONF = \"clockify.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "WSGI_APPLICATION = \"clockify.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": \"clockify\",\n        \"HOST\": \"localhost\",\n        \"USER\": \"postgres\",\n        \"PASSWORD\": \"HankaDS\",",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": \"clockify\",\n        \"HOST\": \"localhost\",\n        \"USER\": \"postgres\",\n        \"PASSWORD\": \"HankaDS\",\n        \"PORT\": \"5432\",\n    }\n}",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"workspace.User\"",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"workspace.User\"\nLOGIN_REDIRECT_URL = \"home\"",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"workspace.User\"\nLOGIN_REDIRECT_URL = \"home\"\nLOGOUT_REDIRECT_URL = \"home\"",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"workspace.User\"\nLOGIN_REDIRECT_URL = \"home\"\nLOGOUT_REDIRECT_URL = \"home\"\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nAUTH_USER_MODEL = \"workspace.User\"\nLOGIN_REDIRECT_URL = \"home\"\nLOGOUT_REDIRECT_URL = \"home\"\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\nSIMPLE_JWT = {",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"workspace.User\"\nLOGIN_REDIRECT_URL = \"home\"\nLOGOUT_REDIRECT_URL = \"home\"\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\nSIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('JWT',),",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = \"home\"\nLOGOUT_REDIRECT_URL = \"home\"\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\nSIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('JWT',),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=100),",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = \"home\"\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\nSIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('JWT',),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=100),\n}",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\nSIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('JWT',),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=100),\n}\n# DJOSER = {",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.settings",
        "description": "app-with-david.clockify.clockify.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('JWT',),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=100),\n}\n# DJOSER = {\n#     \"SERIALIZERS\": {\n#         \"current_user\": \"workspace.serializers.UserSerializer\",\n#     },\n# }",
        "detail": "app-with-david.clockify.clockify.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.urls",
        "description": "app-with-david.clockify.clockify.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('workspace.urls')),\n    path('', include('api.urls')),\n    path('__debug__/', include('debug_toolbar.urls')),\n]",
        "detail": "app-with-david.clockify.clockify.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app-with-david.clockify.clockify.wsgi",
        "description": "app-with-david.clockify.clockify.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "app-with-david.clockify.clockify.wsgi",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "app-with-david.clockify.env.bin.activate_this",
        "description": "app-with-david.clockify.env.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "app-with-david.clockify.env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "app-with-david.clockify.env.bin.activate_this",
        "description": "app-with-david.clockify.env.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "app-with-david.clockify.env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "app-with-david.clockify.env.bin.activate_this",
        "description": "app-with-david.clockify.env.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "app-with-david.clockify.env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "app-with-david.clockify.env.bin.activate_this",
        "description": "app-with-david.clockify.env.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "app-with-david.clockify.env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "app-with-david.clockify.env.bin.activate_this",
        "description": "app-with-david.clockify.env.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "app-with-david.clockify.env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "app-with-david.clockify.env.bin.activate_this",
        "description": "app-with-david.clockify.env.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "app-with-david.clockify.env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "app-with-david.clockify.env.bin.activate_this",
        "description": "app-with-david.clockify.env.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "app-with-david.clockify.env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "app-with-david.clockify.env.bin.activate_this",
        "description": "app-with-david.clockify.env.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "app-with-david.clockify.env.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0001_initial",
        "description": "app-with-david.clockify.workspace.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (",
        "detail": "app-with-david.clockify.workspace.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0002_alter_task_id",
        "description": "app-with-david.clockify.workspace.migrations.0002_alter_task_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"task\",\n            name=\"id\",\n            field=models.AutoField(primary_key=True, serialize=False),\n        ),",
        "detail": "app-with-david.clockify.workspace.migrations.0002_alter_task_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0003_alter_userprojectrole_project_and_more",
        "description": "app-with-david.clockify.workspace.migrations.0003_alter_userprojectrole_project_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0002_alter_task_id\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"userprojectrole\",\n            name=\"project\",\n            field=models.ForeignKey(\n                on_delete=django.db.models.deletion.PROTECT,",
        "detail": "app-with-david.clockify.workspace.migrations.0003_alter_userprojectrole_project_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0004_alter_userprojectrole_project_and_more",
        "description": "app-with-david.clockify.workspace.migrations.0004_alter_userprojectrole_project_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0003_alter_userprojectrole_project_and_more\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"userprojectrole\",\n            name=\"project\",\n            field=models.ForeignKey(\n                on_delete=django.db.models.deletion.PROTECT,",
        "detail": "app-with-david.clockify.workspace.migrations.0004_alter_userprojectrole_project_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0005_userproject_delete_userprojectrole",
        "description": "app-with-david.clockify.workspace.migrations.0005_userproject_delete_userprojectrole",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0004_alter_userprojectrole_project_and_more\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"UserProject\",\n            fields=[\n                (\n                    \"id\",",
        "detail": "app-with-david.clockify.workspace.migrations.0005_userproject_delete_userprojectrole",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0006_userproject_role",
        "description": "app-with-david.clockify.workspace.migrations.0006_userproject_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0005_userproject_delete_userprojectrole\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"userproject\",\n            name=\"role\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "app-with-david.clockify.workspace.migrations.0006_userproject_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0007_alter_currency_shortcut_name",
        "description": "app-with-david.clockify.workspace.migrations.0007_alter_currency_shortcut_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0006_userproject_role\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"currency\",\n            name=\"shortcut_name\",\n            field=models.CharField(blank=True, max_length=3, null=True),\n        ),",
        "detail": "app-with-david.clockify.workspace.migrations.0007_alter_currency_shortcut_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0008_alter_currency_shortcut_name_alter_project_currency",
        "description": "app-with-david.clockify.workspace.migrations.0008_alter_currency_shortcut_name_alter_project_currency",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0007_alter_currency_shortcut_name\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"currency\",\n            name=\"shortcut_name\",\n            field=models.CharField(max_length=3),\n        ),",
        "detail": "app-with-david.clockify.workspace.migrations.0008_alter_currency_shortcut_name_alter_project_currency",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0009_alter_project_currency_alter_project_hex_color",
        "description": "app-with-david.clockify.workspace.migrations.0009_alter_project_currency_alter_project_hex_color",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0008_alter_currency_shortcut_name_alter_project_currency\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"project\",\n            name=\"currency\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "app-with-david.clockify.workspace.migrations.0009_alter_project_currency_alter_project_hex_color",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0010_alter_userproject_project_alter_userproject_role_and_more",
        "description": "app-with-david.clockify.workspace.migrations.0010_alter_userproject_project_alter_userproject_role_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0009_alter_project_currency_alter_project_hex_color\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"userproject\",\n            name=\"project\",\n            field=models.ForeignKey(\n                on_delete=django.db.models.deletion.CASCADE,",
        "detail": "app-with-david.clockify.workspace.migrations.0010_alter_userproject_project_alter_userproject_role_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "description": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0010_alter_userproject_project_alter_userproject_role_and_more\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"role\",\n            name=\"permissions\",\n        ),\n        migrations.AlterField(",
        "detail": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "documentation": {}
    },
    {
        "label": "create_roles",
        "kind": 2,
        "importPath": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "description": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "peekOfCode": "def create_roles(apps, schema_editor):\n    Role = apps.get_model(\"workspace\", \"Role\")\n    roles = [\"admin\", \"member\", \"guest\"]\n    for role in roles:\n        Role.objects.create(name=role)\ndef delete_roles(apps, schema_editor):\n    Role = apps.get_model(\"workspace\", \"Role\")\n    Role.objects.all().delete()\nclass Migration(migrations.Migration):\n    dependencies = [",
        "detail": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "documentation": {}
    },
    {
        "label": "delete_roles",
        "kind": 2,
        "importPath": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "description": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "peekOfCode": "def delete_roles(apps, schema_editor):\n    Role = apps.get_model(\"workspace\", \"Role\")\n    Role.objects.all().delete()\nclass Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0010_alter_userproject_project_alter_userproject_role_and_more\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"role\",",
        "detail": "app-with-david.clockify.workspace.migrations.0011_remove_role_permissions_alter_role_name_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0012_alter_project_description",
        "description": "app-with-david.clockify.workspace.migrations.0012_alter_project_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0011_remove_role_permissions_alter_role_name_and_more\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"project\",\n            name=\"description\",\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "app-with-david.clockify.workspace.migrations.0012_alter_project_description",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0013_alter_userproject_role",
        "description": "app-with-david.clockify.workspace.migrations.0013_alter_userproject_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0012_alter_project_description\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"userproject\",\n            name=\"role\",\n            field=models.ForeignKey(\n                blank=True,",
        "detail": "app-with-david.clockify.workspace.migrations.0013_alter_userproject_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.migrations.0014_alter_userproject_role",
        "description": "app-with-david.clockify.workspace.migrations.0014_alter_userproject_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"workspace\", \"0013_alter_userproject_role\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"userproject\",\n            name=\"role\",\n            field=models.ForeignKey(\n                on_delete=django.db.models.deletion.CASCADE,",
        "detail": "app-with-david.clockify.workspace.migrations.0014_alter_userproject_role",
        "documentation": {}
    },
    {
        "label": "TimeRecordQuerySetTestCase",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.tests.test_queryset",
        "description": "app-with-david.clockify.workspace.tests.test_queryset",
        "peekOfCode": "class TimeRecordQuerySetTestCase(TestCase):\n    def setUp(self):\n        start_time = strftime(\"%H:%M\")\n        date = datetime.date(2022, 12, 19)\n        self.user = User.objects.create(username=\"test\")\n        self.user_2 = User.objects.create(username=\"test_2\")\n        self.timer_first_user = TimeRecord.objects.create(\n            user=self.user, date=date, start_time=start_time\n        )\n        self.timer_second_user = TimeRecord.objects.create(",
        "detail": "app-with-david.clockify.workspace.tests.test_queryset",
        "documentation": {}
    },
    {
        "label": "TimeRecordTestCase",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.tests.test_time_record",
        "description": "app-with-david.clockify.workspace.tests.test_time_record",
        "peekOfCode": "class TimeRecordTestCase(TestCase):\n    def setUp(self):  # runs before every test\n        self.user = User.objects.create(username=\"test\")\n    def tearDown(self):  # runs after every test\n        pass\n    def test_stop_time_after_midnight(self):\n        start_time = strftime(\"%H:%M\")\n        date = datetime.date(2022, 12, 19)\n        timer = TimeRecord.objects.create(user=self.user, date=date, start_time=start_time)\n        with patch(\"workspace.models.datetime\") as datetime_mock:",
        "detail": "app-with-david.clockify.workspace.tests.test_time_record",
        "documentation": {}
    },
    {
        "label": "TimeRecordAdmin",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.admin",
        "description": "app-with-david.clockify.workspace.admin",
        "peekOfCode": "class TimeRecordAdmin(admin.ModelAdmin):\n    list_display = [\"id\", \"start_time\", \"end_time\", \"date\"]\nmyModels = [Project, Currency, Task, Report, User, Role, UserProject, UserTask]\nadmin.site.register(myModels)\nadmin.site.register(TimeRecord, TimeRecordAdmin)",
        "detail": "app-with-david.clockify.workspace.admin",
        "documentation": {}
    },
    {
        "label": "myModels",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.admin",
        "description": "app-with-david.clockify.workspace.admin",
        "peekOfCode": "myModels = [Project, Currency, Task, Report, User, Role, UserProject, UserTask]\nadmin.site.register(myModels)\nadmin.site.register(TimeRecord, TimeRecordAdmin)",
        "detail": "app-with-david.clockify.workspace.admin",
        "documentation": {}
    },
    {
        "label": "WorkspaceConfig",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.apps",
        "description": "app-with-david.clockify.workspace.apps",
        "peekOfCode": "class WorkspaceConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'workspace'",
        "detail": "app-with-david.clockify.workspace.apps",
        "documentation": {}
    },
    {
        "label": "RegistrationForm",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.forms",
        "description": "app-with-david.clockify.workspace.forms",
        "peekOfCode": "class RegistrationForm(forms.ModelForm):\n    password = forms.CharField(label=\"Password\", widget=forms.PasswordInput)\n    class Meta:\n        model = User\n        fields = (\"username\", \"password\")\n    def save(self, commit=True):\n        # Save the provided password in hashed format\n        user = super().save(commit=False)\n        user.set_password(self.cleaned_data[\"password\"])\n        if commit:",
        "detail": "app-with-david.clockify.workspace.forms",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.forms",
        "description": "app-with-david.clockify.workspace.forms",
        "peekOfCode": "class UserCreationForm(forms.ModelForm):\n    password1 = forms.CharField(label=\"Password\", widget=forms.PasswordInput)\n    password2 = forms.CharField(\n        label=\"Password confirmation\", widget=forms.PasswordInput\n    )\n    class Meta:\n        model = User\n        fields = (\"username\",)\n    def clean_password2(self):\n        # Check that the two password entries match",
        "detail": "app-with-david.clockify.workspace.forms",
        "documentation": {}
    },
    {
        "label": "Currency",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class Currency(models.Model):\n    shortcut_name = models.CharField(max_length=3)\n    def __str__(self):\n        return self.shortcut_name\nclass Project(models.Model):\n    name = models.CharField(max_length=255)\n    description = models.TextField(null=True, blank=True)\n    currency = models.ForeignKey(Currency, on_delete=models.SET_NULL, null=True, blank=True, related_name=\"currency\")\n    hex_color = models.CharField(max_length=7, null=True, blank=True)  # predefined colors + color picker\n    hourly_rate = models.FloatField(null=True)",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "Project",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class Project(models.Model):\n    name = models.CharField(max_length=255)\n    description = models.TextField(null=True, blank=True)\n    currency = models.ForeignKey(Currency, on_delete=models.SET_NULL, null=True, blank=True, related_name=\"currency\")\n    hex_color = models.CharField(max_length=7, null=True, blank=True)  # predefined colors + color picker\n    hourly_rate = models.FloatField(null=True)\n    def __str__(self):\n        return self.name\nclass Task(models.Model):\n    id = models.AutoField(primary_key=True)",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "Task",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class Task(models.Model):\n    id = models.AutoField(primary_key=True)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    max_allocated_hours = models.FloatField(null=True, blank=True)\n    project = models.ForeignKey(Project, on_delete=models.CASCADE, related_name=\"tasks\")\n    def __str__(self):\n        return f\"{self.project.name} - {self.name}\"\nclass TimeRecord(models.Model):\n    description = models.TextField(max_length=1024, null=True, blank=True)",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "TimeRecord",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class TimeRecord(models.Model):\n    description = models.TextField(max_length=1024, null=True, blank=True)\n    start_time = models.TimeField()  # auto add time when Object is created, make it editable\n    end_time = models.TimeField(null=True, blank=True)\n    date = models.DateField()\n    task = models.ForeignKey(Task, on_delete=models.CASCADE, null=True, blank=True, related_name=\"time_records\")\n    user = models.ForeignKey(\"User\", on_delete=models.CASCADE, related_name=\"time_records\")\n    objects = TimeRecordQuerySet.as_manager()\n    def __str__(self):\n        if self.task:",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "Report",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class Report(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\n    project = models.ForeignKey(Project, on_delete=models.CASCADE)\nclass User(AbstractUser):\n    def __str__(self):\n        return self.email\n    def get_currently_running_timer(self) -> TimeRecord:\n        \"\"\"If nothing found in queryset throws TimeRecord.DoesNotExist\"\"\"\n        time_records = self.time_records.filter(end_time__isnull=True)\n        if time_records.count() > 1:",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class User(AbstractUser):\n    def __str__(self):\n        return self.email\n    def get_currently_running_timer(self) -> TimeRecord:\n        \"\"\"If nothing found in queryset throws TimeRecord.DoesNotExist\"\"\"\n        time_records = self.time_records.filter(end_time__isnull=True)\n        if time_records.count() > 1:\n            # throw error/ kill all but last\n            # ordered_time_records = time_records.order_by(\"-id\")\n            # latest_record = ordered_time_records[0]",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "Role",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class Role(models.Model):\n    name = models.CharField(max_length=32, unique=True)\n    description = models.TextField()\n    def __str__(self):\n        return self.name\nclass UserTask(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"user_tasks\")\n    task = models.ForeignKey(Task, on_delete=models.CASCADE, related_name=\"task_users\")\n    def __str__(self):\n        return f\"{self.user} - {self.task.name}\"",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "UserTask",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class UserTask(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"user_tasks\")\n    task = models.ForeignKey(Task, on_delete=models.CASCADE, related_name=\"task_users\")\n    def __str__(self):\n        return f\"{self.user} - {self.task.name}\"\nclass UserProject(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"user_projects\")\n    project = models.ForeignKey(Project, on_delete=models.CASCADE, related_name=\"project_users\")\n    role = models.ForeignKey(Role, on_delete=models.CASCADE, related_name=\"role\")\n    def __str__(self):",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "UserProject",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.models",
        "description": "app-with-david.clockify.workspace.models",
        "peekOfCode": "class UserProject(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"user_projects\")\n    project = models.ForeignKey(Project, on_delete=models.CASCADE, related_name=\"project_users\")\n    role = models.ForeignKey(Role, on_delete=models.CASCADE, related_name=\"role\")\n    def __str__(self):\n        return f\"{self.user} - {self.project.name}\"",
        "detail": "app-with-david.clockify.workspace.models",
        "documentation": {}
    },
    {
        "label": "isAuthenticated",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.permissions",
        "description": "app-with-david.clockify.workspace.permissions",
        "peekOfCode": "class isAuthenticated(permissions.BasePermission):\n    def has_permission(self, request, view):\n        return request.user.is_authenticated\nclass isProjectAdminOrMember(permissions.BasePermission):\n    def has_permission(self, request, view):\n        project_pk = view.kwargs.get('project_pk', None)\n        try:\n            user_role = UserProject.objects.get(project_id=project_pk, user_id=request.user.id).role.name\n        except UserProject.DoesNotExist:\n            return False",
        "detail": "app-with-david.clockify.workspace.permissions",
        "documentation": {}
    },
    {
        "label": "isProjectAdminOrMember",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.permissions",
        "description": "app-with-david.clockify.workspace.permissions",
        "peekOfCode": "class isProjectAdminOrMember(permissions.BasePermission):\n    def has_permission(self, request, view):\n        project_pk = view.kwargs.get('project_pk', None)\n        try:\n            user_role = UserProject.objects.get(project_id=project_pk, user_id=request.user.id).role.name\n        except UserProject.DoesNotExist:\n            return False\n        if user_role == 'admin':\n            return request.method in [\"GET\", \"POST\", \"DELETE\", \"PUT\", \"PATCH\"]\n        if user_role == 'member':",
        "detail": "app-with-david.clockify.workspace.permissions",
        "documentation": {}
    },
    {
        "label": "isProjectAdmin",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.permissions",
        "description": "app-with-david.clockify.workspace.permissions",
        "peekOfCode": "class isProjectAdmin(permissions.BasePermission):\n    def _has_user(self, user, related_manager):\n        return related_manager.filter(user=user).exists()\n    def has_object_permission(self, request, view, obj):\n        if isinstance(obj, Project):\n            if self._has_user(request.user, obj.project_users):\n                print(\"im here\")\n                if obj.project_users.get(user=request.user).role.name == \"admin\":\n                    return True\n        elif isinstance(obj, UserProject):",
        "detail": "app-with-david.clockify.workspace.permissions",
        "documentation": {}
    },
    {
        "label": "IsProjectMember",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.permissions",
        "description": "app-with-david.clockify.workspace.permissions",
        "peekOfCode": "class IsProjectMember(permissions.BasePermission):\n    def _has_user(self, user, related_manager):\n        return related_manager.filter(user=user).exists()\n    def has_object_permission(self, request, view, obj):\n        if isinstance(obj, Project):\n            if self._has_user(request.user, obj.project_users):\n                if obj.project_users.get(user=request.user).role.name == \"member\":\n                    if request.method in permissions.SAFE_METHODS:\n                        return True\n        elif isinstance(obj, TimeRecord):",
        "detail": "app-with-david.clockify.workspace.permissions",
        "documentation": {}
    },
    {
        "label": "IsGuest",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.permissions",
        "description": "app-with-david.clockify.workspace.permissions",
        "peekOfCode": "class IsGuest(permissions.BasePermission):\n    \"\"\"this class is about ...\"\"\"\n    def _has_user(self, user, related_manager):\n        \"\"\"this method is about\"\"\"\n        return related_manager.filter(user=user).exists()\n    def has_object_permission(self, request, view, obj):\n        if isinstance(obj, Project):\n            if self._has_user(request.user, obj.project_users):\n                if obj.project_users.get(user=request.user).role.name == \"\":\n                    if request.method in permissions.SAFE_METHODS:",
        "detail": "app-with-david.clockify.workspace.permissions",
        "documentation": {}
    },
    {
        "label": "TimeRecordQuerySet",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.querysets",
        "description": "app-with-david.clockify.workspace.querysets",
        "peekOfCode": "class TimeRecordQuerySet(QuerySet):\n    def filter_running_timers(self, user=None):\n        qs = self.filter(end_time__isnull=True)\n        if user:\n            qs = qs.filter(user=user)\n        return qs",
        "detail": "app-with-david.clockify.workspace.querysets",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class UserCreateSerializer(BaseUserCreateSerializer):\n    class Meta:\n        model = User\n        fields = tuple(User.REQUIRED_FIELDS) + (\n            \"id\",\n            \"username\",\n            \"password\",\n            \"email\",\n            \"first_name\",\n            \"last_name\",",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "CurrencySerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class CurrencySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Currency\n        fields = [\"shortcut_name\"]\nclass ListUserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = \"__all__\"\nclass UserSerializer(serializers.ModelSerializer):\n    def validate_password(self, value: str) -> str:",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ListUserSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class ListUserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = \"__all__\"\nclass UserSerializer(serializers.ModelSerializer):\n    def validate_password(self, value: str) -> str:\n        return make_password(value)\n    class Meta:\n        model = User\n        fields = [\"id\", \"username\", \"first_name\", \"last_name\", \"email\"]",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    def validate_password(self, value: str) -> str:\n        return make_password(value)\n    class Meta:\n        model = User\n        fields = [\"id\", \"username\", \"first_name\", \"last_name\", \"email\"]\nclass TaskSimpleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Task\n        fields = [\"id\", \"name\"]",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TaskSimpleSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class TaskSimpleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Task\n        fields = [\"id\", \"name\"]\nclass UserTaskSerializer(serializers.ModelSerializer):\n    username = serializers.ReadOnlyField(source=\"user.username\")\n    user_id = serializers.ReadOnlyField(source=\"user.id\")\n    class Meta:\n        model = UserTask\n        fields = [\"id\", \"username\", \"user_id\"]",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "UserTaskSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class UserTaskSerializer(serializers.ModelSerializer):\n    username = serializers.ReadOnlyField(source=\"user.username\")\n    user_id = serializers.ReadOnlyField(source=\"user.id\")\n    class Meta:\n        model = UserTask\n        fields = [\"id\", \"username\", \"user_id\"]\nclass AddUserTaskSerializer(serializers.ModelSerializer):\n    user_id = serializers.IntegerField()\n    username = serializers.ReadOnlyField(source=\"user.username\")\n    def save(self, **kwargs):",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "AddUserTaskSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class AddUserTaskSerializer(serializers.ModelSerializer):\n    user_id = serializers.IntegerField()\n    username = serializers.ReadOnlyField(source=\"user.username\")\n    def save(self, **kwargs):\n        task_id = self.context[\"task_id\"]\n        user_id = self.validated_data[\"user_id\"]\n        try:\n            task_user = UserTask.objects.get(task_id=task_id, user_id=user_id)\n            task_user.save()\n        except UserTask.DoesNotExist:",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TaskSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class TaskSerializer(serializers.ModelSerializer):\n    task_users = UserTaskSerializer(many=True)\n    def create(self, validated_data):\n        project_id = self.context['request'].project.id\n        task = Task(name=validated_data[\"name\"], project_id=project_id)\n        task.save()\n        return task\n    class Meta:\n        model = Task\n        fields = [\"id\", \"name\", \"max_allocated_hours\", \"task_users\", \"project_id\"]",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TaskItemSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class TaskItemSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Task\n        fields = \"__all__\"\nclass TaskProjectSimpleSerializer(serializers.ModelSerializer):\n    task_project = serializers.SerializerMethodField()\n    class Meta:\n        model = Task\n        fields = [\"id\", \"name\", \"task_project\"]\n    def get_task_project(self, Task):",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TaskProjectSimpleSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class TaskProjectSimpleSerializer(serializers.ModelSerializer):\n    task_project = serializers.SerializerMethodField()\n    class Meta:\n        model = Task\n        fields = [\"id\", \"name\", \"task_project\"]\n    def get_task_project(self, Task):\n        return Task.project.name\nclass ProjectTaskSerializer(serializers.ModelSerializer):\n    def create(self, validated_data):\n        project_id = self.context['project_id']",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ProjectTaskSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class ProjectTaskSerializer(serializers.ModelSerializer):\n    def create(self, validated_data):\n        project_id = self.context['project_id']\n        return Task.objects.create(project_id=project_id, **validated_data)\n    class Meta:\n        model = Task\n        fields = \"__all__\"\nclass TimeRecordSerializer(serializers.ModelSerializer):\n    user = serializers.SerializerMethodField()\n    task = TaskProjectSimpleSerializer()",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TimeRecordSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class TimeRecordSerializer(serializers.ModelSerializer):\n    user = serializers.SerializerMethodField()\n    task = TaskProjectSimpleSerializer()\n    class Meta:\n        model = TimeRecord\n        fields = [\"id\", \"description\", \"start_time\", \"end_time\", \"date\", \"task\", \"user\"]\n    def get_user(self, TimeRecord):\n        return TimeRecord.user.username\n    def get_task(self, TimeRecord):\n        return TimeRecord.task.name",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TimeRecordStartSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class TimeRecordStartSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TimeRecord\n        fields = [\"description\", \"task\"]\nclass TimeRecordStopSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TimeRecord\n        fields = [\"description\", \"task\", \"start_time\", \"end_time\"]\nclass UserProjectSerializer(serializers.ModelSerializer):\n    username = serializers.ReadOnlyField(source=\"user.username\")",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TimeRecordStopSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class TimeRecordStopSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = TimeRecord\n        fields = [\"description\", \"task\", \"start_time\", \"end_time\"]\nclass UserProjectSerializer(serializers.ModelSerializer):\n    username = serializers.ReadOnlyField(source=\"user.username\")\n    role = serializers.ReadOnlyField(source=\"role.name\")\n    user_id = serializers.ReadOnlyField(source=\"user.id\")\n    class Meta:\n        model = UserProject",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "UserProjectSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class UserProjectSerializer(serializers.ModelSerializer):\n    username = serializers.ReadOnlyField(source=\"user.username\")\n    role = serializers.ReadOnlyField(source=\"role.name\")\n    user_id = serializers.ReadOnlyField(source=\"user.id\")\n    class Meta:\n        model = UserProject\n        fields = [\"id\", \"username\", \"user_id\", \"role\"]\nclass AddUserProjectSerializer(serializers.ModelSerializer):\n    user_id = serializers.IntegerField()\n    role_id = serializers.IntegerField()",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "AddUserProjectSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class AddUserProjectSerializer(serializers.ModelSerializer):\n    user_id = serializers.IntegerField()\n    role_id = serializers.IntegerField()\n    def save(self, **kwargs):\n        project_id = self.context[\"project_id\"]\n        user_id = self.validated_data[\"user_id\"]\n        role_id = self.validated_data[\"role_id\"]\n        try:\n            user_project = UserProject.objects.get(project_id=project_id, user_id=user_id, role_id=role_id)\n            user_project.save()",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "TaskSimpleSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class TaskSimpleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Task\n        fields = [\"id\", \"name\"]\nclass ListProjectsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Project\n        fields = [\"id\", \"name\"]\nclass ProjectSerializer(serializers.ModelSerializer):\n    project_users = UserProjectSerializer(many=True)",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ListProjectsSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class ListProjectsSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Project\n        fields = [\"id\", \"name\"]\nclass ProjectSerializer(serializers.ModelSerializer):\n    project_users = UserProjectSerializer(many=True)\n    class Meta:\n        model = Project\n        fields = [\"id\", \"name\", \"project_users\"]\n    def get_project_users(self, project_obj):",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ProjectSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class ProjectSerializer(serializers.ModelSerializer):\n    project_users = UserProjectSerializer(many=True)\n    class Meta:\n        model = Project\n        fields = [\"id\", \"name\", \"project_users\"]\n    def get_project_users(self, project_obj):\n        print(project_obj)\n        return project_obj.user.username\nclass UpdateProjectSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateProjectSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class UpdateProjectSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Project\n        fields = \"__all__\"\nclass CreateProjectSerializers(serializers.ModelSerializer):\n    def create(self, validated_data):\n        project = Project(name=validated_data[\"name\"])\n        project.save()\n        user_id = self.context['request'].user.id\n        role = Role.objects.get(name=\"admin\")",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "CreateProjectSerializers",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class CreateProjectSerializers(serializers.ModelSerializer):\n    def create(self, validated_data):\n        project = Project(name=validated_data[\"name\"])\n        project.save()\n        user_id = self.context['request'].user.id\n        role = Role.objects.get(name=\"admin\")\n        UserProject.objects.create(user_id=user_id, project_id=project.id, role_id=role.id)\n        return project\n    class Meta:\n        model = Project",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "ProjectDetailSerializer",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.serializers",
        "description": "app-with-david.clockify.workspace.serializers",
        "peekOfCode": "class ProjectDetailSerializer(serializers.ModelSerializer):\n    tasks = TaskSimpleSerializer(many=True)\n    project_users = UserProjectSerializer(many=True)\n    currency = CurrencySerializer()\n    class Meta:\n        model = Project\n        fields = [\"id\", \"name\", \"description\", \"hourly_rate\", \"currency\", \"tasks\", \"project_users\"]\n    def get_currency(self, Project):\n        return Project.currency.shortcut_name",
        "detail": "app-with-david.clockify.workspace.serializers",
        "documentation": {}
    },
    {
        "label": "project_list",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "project_list = views.ProjectViewSet.as_view({'get': 'list', 'post': 'create'})\nproject_details = views.ProjectViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\nproject_users_list = views.UserProjectViewSet.as_view({'get': 'list', 'post': 'create'})\nproject_user_details = views.UserProjectViewSet.as_view({\n    'get': 'retrieve',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "project_details",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "project_details = views.ProjectViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\nproject_users_list = views.UserProjectViewSet.as_view({'get': 'list', 'post': 'create'})\nproject_user_details = views.UserProjectViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "project_users_list",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "project_users_list = views.UserProjectViewSet.as_view({'get': 'list', 'post': 'create'})\nproject_user_details = views.UserProjectViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\nproject_tasks_list = views.TaskViewSet.as_view({'get': 'list', 'post': 'create'})\nproject_task_details = views.TaskViewSet.as_view({\n    'get': 'retrieve',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "project_user_details",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "project_user_details = views.UserProjectViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\nproject_tasks_list = views.TaskViewSet.as_view({'get': 'list', 'post': 'create'})\nproject_task_details = views.TaskViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "project_tasks_list",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "project_tasks_list = views.TaskViewSet.as_view({'get': 'list', 'post': 'create'})\nproject_task_details = views.TaskViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\ntask_users_list = views.TaskUsers.as_view({'get': 'list', 'post': 'create'})\ntask_user_details = views.TaskUsers.as_view({\n    'get': 'retrieve',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "project_task_details",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "project_task_details = views.TaskViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\ntask_users_list = views.TaskUsers.as_view({'get': 'list', 'post': 'create'})\ntask_user_details = views.TaskUsers.as_view({\n    'get': 'retrieve',\n    'put': 'update',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "task_users_list",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "task_users_list = views.TaskUsers.as_view({'get': 'list', 'post': 'create'})\ntask_user_details = views.TaskUsers.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\ntask_time_records_list = views.TaskTimeRecordViewSet.as_view({'get': 'list'})\ntask_time_record_details = views.TaskTimeRecordViewSet.as_view({\n    'get': 'retrieve',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "task_user_details",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "task_user_details = views.TaskUsers.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\ntask_time_records_list = views.TaskTimeRecordViewSet.as_view({'get': 'list'})\ntask_time_record_details = views.TaskTimeRecordViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "task_time_records_list",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "task_time_records_list = views.TaskTimeRecordViewSet.as_view({'get': 'list'})\ntask_time_record_details = views.TaskTimeRecordViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\ntime_records_list = views.TimeRecordViewSet.as_view({'get': 'list'})\ntime_record_detail = views.TimeRecordViewSet.as_view({\n    'get': 'retrieve',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "task_time_record_details",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "task_time_record_details = views.TaskTimeRecordViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\ntime_records_list = views.TimeRecordViewSet.as_view({'get': 'list'})\ntime_record_detail = views.TimeRecordViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "time_records_list",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "time_records_list = views.TimeRecordViewSet.as_view({'get': 'list'})\ntime_record_detail = views.TimeRecordViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\nurlpatterns = [\n    path(\"\", views.home, name=\"home\"),\n    path(\"auth/\", include(\"djoser.urls\")),",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "time_record_detail",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "time_record_detail = views.TimeRecordViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\nurlpatterns = [\n    path(\"\", views.home, name=\"home\"),\n    path(\"auth/\", include(\"djoser.urls\")),\n    path(\"auth/\", include(\"djoser.urls.jwt\")),",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app-with-david.clockify.workspace.urls",
        "description": "app-with-david.clockify.workspace.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.home, name=\"home\"),\n    path(\"auth/\", include(\"djoser.urls\")),\n    path(\"auth/\", include(\"djoser.urls.jwt\")),\n    path(\"register/\", views.Register.as_view(), name=\"register\"),\n    path(\"projects/\", project_list, name=\"list-projects\"),\n    path(\"projects/<int:pk>/\", project_details, name=\"project-details\"),\n    path(\"projects/<int:project_pk>/users/\", project_users_list, name=\"list-project-users\"),\n    path(\"projects/<int:project_pk>/users/<pk>/\", project_user_details, name=\"project-user-detail\"),\n    path(\"projects/<int:project_pk>/tasks/\", project_tasks_list, name=\"list-project-tasks\"),",
        "detail": "app-with-david.clockify.workspace.urls",
        "documentation": {}
    },
    {
        "label": "RegistrationView",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class RegistrationView(CreateView):\n    template_name = \"workspace/register.html\"\n    form_class = RegistrationForm\n    # permission_classes = [isProjectAdmin]\n    def get_context_data(self, *args, **kwargs):\n        context = super().get_context_data(*args, **kwargs)\n        context[\"next\"] = self.request.GET.get(\"next\")\n        return context\n    def get_success_url(self):\n        next_url = self.request.POST.get(\"next\")",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "ProfileView",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class ProfileView(UpdateView):\n    model = User\n    fields = [\"name\", \"phone\", \"date_of_birth\", \"picture\"]\n    template_name = \"workspace/profile.html\"\n    def get_success_url(self):\n        return reverse(\"index\")\n    def get_object(self):\n        return self.request.user\nclass Register(APIView):\n    def post(self, request):",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "Register",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class Register(APIView):\n    def post(self, request):\n        form = UserCreationForm(request.POST)\n        form.is_valid()\n        form.save()\n        username = form.cleaned_data.get(\"username\")\n        messages.success(request, f\"Hi {username}, your account was successfully created\")\n        return redirect(\"home\")\nclass TrackingStart(APIView):\n    permission_classes = [IsAuthenticated]",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "TrackingStart",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class TrackingStart(APIView):\n    permission_classes = [IsAuthenticated]\n    # kill all running\n    def find_and_kill_all_running(self, user):\n        running_timers = TimeRecord.objects.filter_running_timers(user)\n        for timer in running_timers:\n            timer.stop_time()\n    # start new\n    def post(self, request):\n        serializer = TimeRecordStartSerializer(data=request.POST)",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "StopAll",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class StopAll(APIView):\n    permission_classes = [IsAuthenticated]\n    def post(self, request):\n        queryset = TimeRecord.objects.filter_running_timers(user=request.user)\n        for tracker in queryset:\n            tracker.stop_time()\n        serializer = TimeRecordSerializer(queryset, many=True)\n        return Response(serializer.data, status=status.HTTP_200_OK)\n# stop currently running one\nclass TrackingStop(APIView):",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "TrackingStop",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class TrackingStop(APIView):\n    permission_classes = [IsAuthenticated]\n    def post(self, request):\n        user: User = request.user\n        try:\n            current_timer = user.get_currently_running_timer()\n        except TimeRecord.DoesNotExist:\n            Response({}, status=status.HTTP_404_NOT_FOUND)\n        current_timer.stop_time()\n        serializer = TimeRecordSerializer(current_timer)",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "ListAllUsers",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class ListAllUsers(ListAPIView):\n    permission_classes = [IsAuthenticated]\n    serializer_class = ListUserSerializer\n    def get_queryset(self, request):\n        return User.objects.get(id=request.user.id)\nclass UserViewSet(ModelViewSet):\n    serializer_class = UserSerializer\n    def get_queryset(self):\n        return User.objects.all()\nclass ListUserProject(ListAPIView):",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class UserViewSet(ModelViewSet):\n    serializer_class = UserSerializer\n    def get_queryset(self):\n        return User.objects.all()\nclass ListUserProject(ListAPIView):\n    pass\nclass UserProjectViewSet(ModelViewSet):\n    def get_permissions(self):\n        if self.request.method in SAFE_METHODS:\n            self.permission_classes = [IsProjectMember]",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "ListUserProject",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class ListUserProject(ListAPIView):\n    pass\nclass UserProjectViewSet(ModelViewSet):\n    def get_permissions(self):\n        if self.request.method in SAFE_METHODS:\n            self.permission_classes = [IsProjectMember]\n        else:\n            self.permission_classes = [isProjectAdmin]\n        return [isProjectAdminOrMember()]\n    def get_serializer_class(self):",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "UserProjectViewSet",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class UserProjectViewSet(ModelViewSet):\n    def get_permissions(self):\n        if self.request.method in SAFE_METHODS:\n            self.permission_classes = [IsProjectMember]\n        else:\n            self.permission_classes = [isProjectAdmin]\n        return [isProjectAdminOrMember()]\n    def get_serializer_class(self):\n        if self.request.method == \"POST\":\n            return AddUserProjectSerializer",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "TimeRecordViewSet",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class TimeRecordViewSet(ModelViewSet):\n    serializer_class = TimeRecordSerializer\n    def get_queryset(self):\n        return TimeRecord.objects.filter(user=self.request.user)\nclass TaskTimeRecordViewSet(ModelViewSet):\n    serializer_class = TimeRecordSerializer\n    permission_classes = [isProjectAdmin | IsProjectMember]\n    def get_queryset(self):\n        return TimeRecord.objects.filter(task__project_id=self.kwargs[\"project_pk\"])\nclass ProjectViewSet(ModelViewSet):",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "TaskTimeRecordViewSet",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class TaskTimeRecordViewSet(ModelViewSet):\n    serializer_class = TimeRecordSerializer\n    permission_classes = [isProjectAdmin | IsProjectMember]\n    def get_queryset(self):\n        return TimeRecord.objects.filter(task__project_id=self.kwargs[\"project_pk\"])\nclass ProjectViewSet(ModelViewSet):\n    permission_classes = [isProjectAdmin | IsProjectMember]\n    def get_serializer_class(self):\n        if self.action == \"list\":\n            return ProjectSerializer",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "ProjectViewSet",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class ProjectViewSet(ModelViewSet):\n    permission_classes = [isProjectAdmin | IsProjectMember]\n    def get_serializer_class(self):\n        if self.action == \"list\":\n            return ProjectSerializer\n        if self.request.method == \"GET\":\n            return ProjectDetailSerializer\n        if self.request.method == \"PATCH\":\n            return UpdateProjectSerializer\n        if self.request.method == \"POST\":",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "TaskViewSet",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class TaskViewSet(ModelViewSet):\n    permission_classes = [isProjectAdminOrMember]\n    # def get_permissions(self):\n    #     if self.request.method in SAFE_METHODS:\n    #         return [IsProjectMember()]\n    #     return [isProjectAdmin()]\n    def get_serializer_class(self):\n        if self.request.method in [\"POST\", \"PATCH\"]:\n            return ProjectTaskSerializer\n        return TaskSerializer",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "TaskUsers",
        "kind": 6,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "class TaskUsers(ModelViewSet):\n    permission_classes = [isProjectAdminOrMember]\n    def get_serializer_class(self):\n        if self.request.method in [\"POST\"]:\n            return AddUserTaskSerializer\n        return UserTaskSerializer\n    def get_serializer_context(self):\n        return {\"task_id\": self.kwargs[\"task_pk\"]}\n    def get_queryset(self):\n        return UserTask.objects.filter(task__project_id=self.kwargs[\"project_pk\"])",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "app-with-david.clockify.workspace.views",
        "description": "app-with-david.clockify.workspace.views",
        "peekOfCode": "def home(request):\n    return render(request, \"workspace/home.html\")\nclass RegistrationView(CreateView):\n    template_name = \"workspace/register.html\"\n    form_class = RegistrationForm\n    # permission_classes = [isProjectAdmin]\n    def get_context_data(self, *args, **kwargs):\n        context = super().get_context_data(*args, **kwargs)\n        context[\"next\"] = self.request.GET.get(\"next\")\n        return context",
        "detail": "app-with-david.clockify.workspace.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app-with-david.clockify.manage",
        "description": "app-with-david.clockify.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'clockify.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "app-with-david.clockify.manage",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.likes.migrations.0001_initial",
        "description": "python-django-with-mosh.python-django.ORM.storefront.likes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('contenttypes', '0002_remove_content_type_name'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='LikedItem',\n            fields=[",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.likes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "LikesConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.likes.apps",
        "description": "python-django-with-mosh.python-django.ORM.storefront.likes.apps",
        "peekOfCode": "class LikesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'likes'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.likes.apps",
        "documentation": {}
    },
    {
        "label": "LikedItem",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.likes.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.likes.models",
        "peekOfCode": "class LikedItem(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.likes.models",
        "documentation": {}
    },
    {
        "label": "PlaygroundConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.playground.apps",
        "description": "python-django-with-mosh.python-django.ORM.storefront.playground.apps",
        "peekOfCode": "class PlaygroundConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'playground'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.playground.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.playground.urls",
        "description": "python-django-with-mosh.python-django.ORM.storefront.playground.urls",
        "peekOfCode": "urlpatterns = [\n    path('hello/', views.say_hello)\n]",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.playground.urls",
        "documentation": {}
    },
    {
        "label": "calculate",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.playground.views",
        "description": "python-django-with-mosh.python-django.ORM.storefront.playground.views",
        "peekOfCode": "def calculate():\n    x = 1\n    y = 2\n    return x\ndef say_hello(request):\n    x = calculate()\n    return render(request, 'hello.html', {'name': 'Mosh'})",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.playground.views",
        "documentation": {}
    },
    {
        "label": "say_hello",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.playground.views",
        "description": "python-django-with-mosh.python-django.ORM.storefront.playground.views",
        "peekOfCode": "def say_hello(request):\n    x = calculate()\n    return render(request, 'hello.html', {'name': 'Mosh'})",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.playground.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0001_initial",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cart',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('created_at', models.DateTimeField(auto_now_add=True)),",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0002_rename_price_to_unit_price",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0002_rename_price_to_unit_price",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='product',\n            old_name='price',\n            new_name='unit_price',\n        ),",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0002_rename_price_to_unit_price",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0003_add_slug_to_product",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0003_add_slug_to_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0002_rename_price_to_unit_price'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='slug',\n            field=models.SlugField(default='-'),\n            preserve_default=False,",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0003_add_slug_to_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0004_auto_20210610_1442",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0004_auto_20210610_1442",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0003_add_slug_to_product'),\n    ]\n    operations = [\n        migrations.RunSQL(\"\"\"\n            INSERT INTO store_collection (title)\n            VALUES ('collection1')\n        \"\"\", \"\"\"\n            DELETE FROM store_collection ",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.migrations.0004_auto_20210610_1442",
        "documentation": {}
    },
    {
        "label": "StoreConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.apps",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.apps",
        "peekOfCode": "class StoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'store'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.apps",
        "documentation": {}
    },
    {
        "label": "Promotion",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class Promotion(models.Model):\n    description = models.CharField(max_length=255)\n    discount = models.FloatField()\nclass Collection(models.Model):\n    title = models.CharField(max_length=255)\n    featured_product = models.ForeignKey(\n        'Product', on_delete=models.SET_NULL, null=True, related_name='+')\nclass Product(models.Model):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Collection",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class Collection(models.Model):\n    title = models.CharField(max_length=255)\n    featured_product = models.ForeignKey(\n        'Product', on_delete=models.SET_NULL, null=True, related_name='+')\nclass Product(models.Model):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField()\n    description = models.TextField()\n    unit_price = models.DecimalField(max_digits=6, decimal_places=2)\n    inventory = models.IntegerField()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class Product(models.Model):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField()\n    description = models.TextField()\n    unit_price = models.DecimalField(max_digits=6, decimal_places=2)\n    inventory = models.IntegerField()\n    last_update = models.DateTimeField(auto_now=True)\n    collection = models.ForeignKey(Collection, on_delete=models.PROTECT)\n    promotions = models.ManyToManyField(Promotion)\nclass Customer(models.Model):",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class Customer(models.Model):\n    MEMBERSHIP_BRONZE = 'B'\n    MEMBERSHIP_SILVER = 'S'\n    MEMBERSHIP_GOLD = 'G'\n    MEMBERSHIP_CHOICES = [\n        (MEMBERSHIP_BRONZE, 'Bronze'),\n        (MEMBERSHIP_SILVER, 'Silver'),\n        (MEMBERSHIP_GOLD, 'Gold'),\n    ]\n    first_name = models.CharField(max_length=255)",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class Order(models.Model):\n    PAYMENT_STATUS_PENDING = 'P'\n    PAYMENT_STATUS_COMPLETE = 'C'\n    PAYMENT_STATUS_FAILED = 'F'\n    PAYMENT_STATUS_CHOICES = [\n        (PAYMENT_STATUS_PENDING, 'Pending'),\n        (PAYMENT_STATUS_COMPLETE, 'Complete'),\n        (PAYMENT_STATUS_FAILED, 'Failed')\n    ]\n    placed_at = models.DateTimeField(auto_now_add=True)",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class OrderItem(models.Model):\n    order = models.ForeignKey(Order, on_delete=models.PROTECT)\n    product = models.ForeignKey(Product, on_delete=models.PROTECT)\n    quantity = models.PositiveSmallIntegerField()\n    unit_price = models.DecimalField(max_digits=6, decimal_places=2)\nclass Address(models.Model):\n    street = models.CharField(max_length=255)\n    city = models.CharField(max_length=255)\n    customer = models.ForeignKey(\n        Customer, on_delete=models.CASCADE)",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class Address(models.Model):\n    street = models.CharField(max_length=255)\n    city = models.CharField(max_length=255)\n    customer = models.ForeignKey(\n        Customer, on_delete=models.CASCADE)\nclass Cart(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\nclass CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class Cart(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\nclass CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.PositiveSmallIntegerField()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "peekOfCode": "class CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.PositiveSmallIntegerField()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.asgi",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-hs6j037urx6iav+7#10%-vu4l4f5@@-1_zo)oft4g7$vf2$jmp'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-hs6j037urx6iav+7#10%-vu4l4f5@@-1_zo)oft4g7$vf2$jmp'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.messages',",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'playground',",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'playground',\n    'debug_toolbar',",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'playground',\n    'debug_toolbar',\n    'store',\n    'tags',",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    # ...\n    '127.0.0.1',\n    # ...\n]\nROOT_URLCONF = 'storefront.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "ROOT_URLCONF = 'storefront.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "WSGI_APPLICATION = 'storefront.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'storefront',\n        'HOST': 'localhost',\n        'USER': 'postgres',\n        'PASSWORD': 'HankaDS',",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'storefront',\n        'HOST': 'localhost',\n        'USER': 'postgres',\n        'PASSWORD': 'HankaDS',\n        'PORT': '5432'\n    }\n}",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.urls",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('playground/', include('playground.urls')),\n    path('__debug__/', include(debug_toolbar.urls)),\n]",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.storefront.wsgi",
        "description": "python-django-with-mosh.python-django.ORM.storefront.storefront.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.storefront.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.tags.migrations.0001_initial",
        "description": "python-django-with-mosh.python-django.ORM.storefront.tags.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('contenttypes', '0002_remove_content_type_name'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tag',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.tags.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TagsConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.tags.apps",
        "description": "python-django-with-mosh.python-django.ORM.storefront.tags.apps",
        "peekOfCode": "class TagsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'tags'",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.tags.apps",
        "documentation": {}
    },
    {
        "label": "Tag",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.tags.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.tags.models",
        "peekOfCode": "class Tag(models.Model):\n    label = models.CharField(max_length=255)\nclass TaggedItem(models.Model):\n    tag = models.ForeignKey(Tag, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.tags.models",
        "documentation": {}
    },
    {
        "label": "TaggedItem",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.tags.models",
        "description": "python-django-with-mosh.python-django.ORM.storefront.tags.models",
        "peekOfCode": "class TaggedItem(models.Model):\n    tag = models.ForeignKey(Tag, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey()",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.tags.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.ORM.storefront.manage",
        "description": "python-django-with-mosh.python-django.ORM.storefront.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'storefront.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "python-django-with-mosh.python-django.ORM.storefront.manage",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.core.migrations.0001_initial",
        "description": "python-django-with-mosh.python-django.storefront.core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (",
        "detail": "python-django-with-mosh.python-django.storefront.core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "on_order_created",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.core.signals.handlers",
        "description": "python-django-with-mosh.python-django.storefront.core.signals.handlers",
        "peekOfCode": "def on_order_created(sender, **kwargs):\n    print(kwargs[\"order\"])",
        "detail": "python-django-with-mosh.python-django.storefront.core.signals.handlers",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.core.admin",
        "description": "python-django-with-mosh.python-django.storefront.core.admin",
        "peekOfCode": "class UserAdmin(BaseUserAdmin):\n    add_fieldsets = (\n        (\n            None,\n            {\n                \"classes\": (\"wide\",),\n                \"fields\": (\n                    \"username\",\n                    \"password1\",\n                    \"password2\",",
        "detail": "python-django-with-mosh.python-django.storefront.core.admin",
        "documentation": {}
    },
    {
        "label": "TagInline",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.core.admin",
        "description": "python-django-with-mosh.python-django.storefront.core.admin",
        "peekOfCode": "class TagInline(GenericTabularInline):\n    autocomplete_fields = [\"tag\"]\n    model = TaggedItem\nclass CustomProductAdmin(ProductAdmin):\n    inlines = [TagInline, ProductImageInline]\nadmin.site.unregister(Product)\nadmin.site.register(Product, CustomProductAdmin)",
        "detail": "python-django-with-mosh.python-django.storefront.core.admin",
        "documentation": {}
    },
    {
        "label": "CustomProductAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.core.admin",
        "description": "python-django-with-mosh.python-django.storefront.core.admin",
        "peekOfCode": "class CustomProductAdmin(ProductAdmin):\n    inlines = [TagInline, ProductImageInline]\nadmin.site.unregister(Product)\nadmin.site.register(Product, CustomProductAdmin)",
        "detail": "python-django-with-mosh.python-django.storefront.core.admin",
        "documentation": {}
    },
    {
        "label": "CoreConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.core.apps",
        "description": "python-django-with-mosh.python-django.storefront.core.apps",
        "peekOfCode": "class CoreConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"core\"\n    def ready(self) -> None:\n        import core.signals.handlers",
        "detail": "python-django-with-mosh.python-django.storefront.core.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.core.models",
        "description": "python-django-with-mosh.python-django.storefront.core.models",
        "peekOfCode": "class User(AbstractUser):\n    email = models.EmailField(unique=True)",
        "detail": "python-django-with-mosh.python-django.storefront.core.models",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.core.serializers",
        "description": "python-django-with-mosh.python-django.storefront.core.serializers",
        "peekOfCode": "class UserCreateSerializer(BaseUserCreateSerializer):\n    class Meta:\n        model = User\n        fields = tuple(User.REQUIRED_FIELDS) + (\n            \"id\",\n            \"username\",\n            \"password\",\n            \"email\",\n            \"first_name\",\n            \"last_name\",",
        "detail": "python-django-with-mosh.python-django.storefront.core.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.core.serializers",
        "description": "python-django-with-mosh.python-django.storefront.core.serializers",
        "peekOfCode": "class UserSerializer(BaseUserSerializer):\n    class Meta:\n        model = User\n        fields = tuple(User.REQUIRED_FIELDS) + (\n            \"id\",\n            \"username\",\n            \"email\",\n            \"first_name\",\n            \"last_name\",\n        )",
        "detail": "python-django-with-mosh.python-django.storefront.core.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.core.urls",
        "description": "python-django-with-mosh.python-django.storefront.core.urls",
        "peekOfCode": "urlpatterns = [path(\"\", TemplateView.as_view(template_name=\"core/index.html\"))]",
        "detail": "python-django-with-mosh.python-django.storefront.core.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.likes.migrations.0001_initial",
        "description": "python-django-with-mosh.python-django.storefront.likes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"contenttypes\", \"0002_remove_content_type_name\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"LikedItem\",\n            fields=[",
        "detail": "python-django-with-mosh.python-django.storefront.likes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.likes.apps",
        "description": "python-django-with-mosh.python-django.storefront.likes.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"likes\"",
        "detail": "python-django-with-mosh.python-django.storefront.likes.apps",
        "documentation": {}
    },
    {
        "label": "LikedItem",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.likes.models",
        "description": "python-django-with-mosh.python-django.storefront.likes.models",
        "peekOfCode": "class LikedItem(models.Model):\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey()",
        "detail": "python-django-with-mosh.python-django.storefront.likes.models",
        "documentation": {}
    },
    {
        "label": "WebsiteUser",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.locustfiles.browse_products",
        "description": "python-django-with-mosh.python-django.storefront.locustfiles.browse_products",
        "peekOfCode": "class WebsiteUser(HttpUser):\n    # randomly wait 1-5s between each tasks, this is to simulate the real behaviour\n    wait_time = between(1, 5)\n    # Viewing products\n    @task(2)\n    def view_products(self):\n        collection_id = randint(2, 6)\n        # 2 arg: testing endpoint\n        self.client.get(f\"/store/products/?collection_id={collection_id}\", name=\"/store/products\")\n    # View product details",
        "detail": "python-django-with-mosh.python-django.storefront.locustfiles.browse_products",
        "documentation": {}
    },
    {
        "label": "PlaygroundConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.playground.apps",
        "description": "python-django-with-mosh.python-django.storefront.playground.apps",
        "peekOfCode": "class PlaygroundConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'playground'",
        "detail": "python-django-with-mosh.python-django.storefront.playground.apps",
        "documentation": {}
    },
    {
        "label": "notify_customers",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.playground.tasks",
        "description": "python-django-with-mosh.python-django.storefront.playground.tasks",
        "peekOfCode": "def notify_customers(message):\n    print(\"Sending 10k emails...\")\n    print(message)\n    sleep(10)  # put function into sleep for 10s\n    print(\"Emails were successfully sent\")",
        "detail": "python-django-with-mosh.python-django.storefront.playground.tasks",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.playground.urls",
        "description": "python-django-with-mosh.python-django.storefront.playground.urls",
        "peekOfCode": "urlpatterns = [\n  path('hello/', views.say_hello)\n]",
        "detail": "python-django-with-mosh.python-django.storefront.playground.urls",
        "documentation": {}
    },
    {
        "label": "say_hello",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.playground.views",
        "description": "python-django-with-mosh.python-django.storefront.playground.views",
        "peekOfCode": "def say_hello(request):\n    notify_customers.delay(\"Hello\")\n    return render(request, \"hello.html\", {\"name\": \"Hanka\"})",
        "detail": "python-django-with-mosh.python-django.storefront.playground.views",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.management.commands.seed_db",
        "description": "python-django-with-mosh.python-django.storefront.store.management.commands.seed_db",
        "peekOfCode": "class Command(BaseCommand):\n    help = \"Populates the database with collections and products\"\n    def handle(self, *args, **options):\n        print(\"Populating the database...\")\n        current_dir = os.path.dirname(__file__)\n        file_path = os.path.join(current_dir, \"seed.sql\")\n        sql = Path(file_path).read_text()\n        with connection.cursor() as cursor:\n            cursor.execute(sql)",
        "detail": "python-django-with-mosh.python-django.storefront.store.management.commands.seed_db",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.migrations.0001_initial",
        "description": "python-django-with-mosh.python-django.storefront.store.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Cart\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "python-django-with-mosh.python-django.storefront.store.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.migrations.0002_alter_customer_options_remove_customer_email_and_more",
        "description": "python-django-with-mosh.python-django.storefront.store.migrations.0002_alter_customer_options_remove_customer_email_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        (\"store\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"customer\",\n            options={\"ordering\": [\"user__first_name\", \"user__last_name\"]},\n        ),",
        "detail": "python-django-with-mosh.python-django.storefront.store.migrations.0002_alter_customer_options_remove_customer_email_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.migrations.0003_alter_order_options",
        "description": "python-django-with-mosh.python-django.storefront.store.migrations.0003_alter_order_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"store\", \"0002_alter_customer_options_remove_customer_email_and_more\"),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"order\",\n            options={\"permissions\": [(\"cancel_order\", \"Can cancel order\")]},\n        ),\n    ]",
        "detail": "python-django-with-mosh.python-django.storefront.store.migrations.0003_alter_order_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.migrations.0004_alter_customer_options",
        "description": "python-django-with-mosh.python-django.storefront.store.migrations.0004_alter_customer_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"store\", \"0003_alter_order_options\"),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"customer\",\n            options={\n                \"ordering\": [\"user__first_name\", \"user__last_name\"],\n                \"permissions\": [(\"view_history\", \"Can view history\")],",
        "detail": "python-django-with-mosh.python-django.storefront.store.migrations.0004_alter_customer_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.migrations.0005_alter_orderitem_order_productimage",
        "description": "python-django-with-mosh.python-django.storefront.store.migrations.0005_alter_orderitem_order_productimage",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"store\", \"0004_alter_customer_options\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"orderitem\",\n            name=\"order\",\n            field=models.ForeignKey(\n                on_delete=django.db.models.deletion.PROTECT,",
        "detail": "python-django-with-mosh.python-django.storefront.store.migrations.0005_alter_orderitem_order_productimage",
        "documentation": {}
    },
    {
        "label": "create_customer_for_new_user",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.store.signals.handlers",
        "description": "python-django-with-mosh.python-django.storefront.store.signals.handlers",
        "peekOfCode": "def create_customer_for_new_user(sender, **kwargs):\n    if kwargs[\"created\"]:  # returns a boolean whether instance has been created\n        Customer.objects.create(user=kwargs[\"instance\"])",
        "detail": "python-django-with-mosh.python-django.storefront.store.signals.handlers",
        "documentation": {}
    },
    {
        "label": "api_client",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.store.tests.conftest",
        "description": "python-django-with-mosh.python-django.storefront.store.tests.conftest",
        "peekOfCode": "def api_client():\n    return APIClient()\n@pytest.fixture\ndef authenticate(api_client):\n    def do_authenticate(is_staff=False):\n        return api_client.force_authenticate(user=User(is_staff=is_staff))\n    return do_authenticate",
        "detail": "python-django-with-mosh.python-django.storefront.store.tests.conftest",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.store.tests.conftest",
        "description": "python-django-with-mosh.python-django.storefront.store.tests.conftest",
        "peekOfCode": "def authenticate(api_client):\n    def do_authenticate(is_staff=False):\n        return api_client.force_authenticate(user=User(is_staff=is_staff))\n    return do_authenticate",
        "detail": "python-django-with-mosh.python-django.storefront.store.tests.conftest",
        "documentation": {}
    },
    {
        "label": "TestCreateCollection",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "description": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "peekOfCode": "class TestCreateCollection:\n    # @pytest.mark.skip\n    def test_if_user_is_anonymous_returns_401(self, create_collection):\n        response = create_collection({\"title\": \"beauty\"})\n        assert response.status_code == status.HTTP_401_UNAUTHORIZED\n    def test_if_user_is_not_admin_returns_403(self, authenticate, create_collection):\n        authenticate()\n        response = create_collection({\"title\": \"beauty\"})\n        assert response.status_code == status.HTTP_403_FORBIDDEN\n    def test_if_data_is_invalid_returns_400(self, authenticate, create_collection):",
        "detail": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "documentation": {}
    },
    {
        "label": "TestRetrieveCollection",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "description": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "peekOfCode": "class TestRetrieveCollection:\n    def test_if_collection_exists_returns_200(self, api_client):\n        collection = baker.make(Collection)\n        response = api_client.get(f\"/store/collections/{collection.id}/\")\n        assert response.status_code == status.HTTP_200_OK\n        assert response.data == {\"id\": collection.id, \"title\": collection.title, \"products_count\": 0}",
        "detail": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "documentation": {}
    },
    {
        "label": "create_collection",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "description": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "peekOfCode": "def create_collection(api_client):\n    def do_create_collection(collection):  # inner function\n        return api_client.post(\"/store/collections\", collection)\n    return do_create_collection\n@pytest.mark.django_db\nclass TestCreateCollection:\n    # @pytest.mark.skip\n    def test_if_user_is_anonymous_returns_401(self, create_collection):\n        response = create_collection({\"title\": \"beauty\"})\n        assert response.status_code == status.HTTP_401_UNAUTHORIZED",
        "detail": "python-django-with-mosh.python-django.storefront.store.tests.test_collections",
        "documentation": {}
    },
    {
        "label": "InventoryFilter",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class InventoryFilter(admin.SimpleListFilter):\n    title = \"inventory\"\n    parameter_name = \"inventory\"\n    def lookups(self, request, model_admin):\n        return [(\"<10\", \"Low\")]  # tuple of value and human readable value\n    def queryset(self, request, queryset: QuerySet):\n        if self.value() == \"<10\":\n            queryset.filter(inventory__lt=10)\nclass CustomerAdmin(admin.ModelAdmin):\n    list_display = [\"first_name\", \"last_name\", \"membership\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "CustomerAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class CustomerAdmin(admin.ModelAdmin):\n    list_display = [\"first_name\", \"last_name\", \"membership\"]\n    list_editable = [\"membership\"]\n    list_per_page = 10\n    list_select_related = [\"user\"]\n    ordering = [\"user__first_name\", \"user__last_name\"]\n    # lookup type, i = insensitive, startswith only find the results starting\n    search_fields = [\"first_name__istartswith\", \"last_name__istartswith\"]\nclass ProductImageInline(admin.TabularInline):\n    model = ProductImage",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "ProductImageInline",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class ProductImageInline(admin.TabularInline):\n    model = ProductImage\n    readonly_fields = [\"thumbnail\"]\n    def thumbnail(self, instance):\n        if instance.image.name != \"\":\n            return format_html(f'<img src=\"{instance.image.url}\" class=\"thumbnail\"/>')\n        return \"\"\nclass ProductAdmin(admin.ModelAdmin):\n    search_fields = [\"title\"]\n    autocomplete_fields = [\"collection\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n    search_fields = [\"title\"]\n    autocomplete_fields = [\"collection\"]\n    prepopulated_fields = {\"slug\": [\"title\"]}\n    actions = [\"clear_inventory\"]\n    list_display = [\"title\", \"unit_price\", \"inventory_status\", \"collection_title\"]\n    list_editable = [\"unit_price\"]\n    list_filter = [\"collection\", \"last_update\", InventoryFilter]\n    list_per_page = 10\n    list_select_related = [\"collection\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "OrderItemInline",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class OrderItemInline(admin.StackedInline):\n    autocomplete_fields = [\"product\"]\n    model = OrderItem\n    extra = 0\nclass OrderAdmin(admin.ModelAdmin):\n    autocomplete_fields = [\"customer\"]\n    inlines = [OrderItemInline]\n    list_display = [\"id\", \"placed_at\", \"customer\"]\nclass CollectionAdmin(admin.ModelAdmin):\n    list_display = [\"title\", \"products_count\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class OrderAdmin(admin.ModelAdmin):\n    autocomplete_fields = [\"customer\"]\n    inlines = [OrderItemInline]\n    list_display = [\"id\", \"placed_at\", \"customer\"]\nclass CollectionAdmin(admin.ModelAdmin):\n    list_display = [\"title\", \"products_count\"]\n    search_fields = [\"title\"]\n    def products_count(self, collection):\n        # url format of reverse function: app_model_page\n        url = reverse(\"admin:store_product_changelist\") + \"?\" + urlencode({\"collection__id\": str(collection.id)})",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "CollectionAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class CollectionAdmin(admin.ModelAdmin):\n    list_display = [\"title\", \"products_count\"]\n    search_fields = [\"title\"]\n    def products_count(self, collection):\n        # url format of reverse function: app_model_page\n        url = reverse(\"admin:store_product_changelist\") + \"?\" + urlencode({\"collection__id\": str(collection.id)})\n        return format_html('<a href=\"{}\">{}</a>', url, collection.products_count)\n    def get_queryset(self, request):\n        return super().get_queryset(request).annotate(products_count=Count(\"product\"))\nclass CartItemAdmin(admin.ModelAdmin):",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "CartItemAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class CartItemAdmin(admin.ModelAdmin):\n    list_filter = [\"product\"]\n    list_display = [\"id\", \"cart_id\", \"product_id\", \"quantity\"]\nclass CartAdmin(admin.ModelAdmin):\n    list_display = [\"id\", \"created_at\"]\nadmin.site.register(Product, ProductAdmin)\nadmin.site.register(Order, OrderAdmin)\nadmin.site.register(Collection, CollectionAdmin)\nadmin.site.register(Customer, CustomerAdmin)\nadmin.site.register(Cart, CartAdmin)",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "CartAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.admin",
        "description": "python-django-with-mosh.python-django.storefront.store.admin",
        "peekOfCode": "class CartAdmin(admin.ModelAdmin):\n    list_display = [\"id\", \"created_at\"]\nadmin.site.register(Product, ProductAdmin)\nadmin.site.register(Order, OrderAdmin)\nadmin.site.register(Collection, CollectionAdmin)\nadmin.site.register(Customer, CustomerAdmin)\nadmin.site.register(Cart, CartAdmin)\nadmin.site.register(CartItem, CartItemAdmin)",
        "detail": "python-django-with-mosh.python-django.storefront.store.admin",
        "documentation": {}
    },
    {
        "label": "StoreConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.apps",
        "description": "python-django-with-mosh.python-django.storefront.store.apps",
        "peekOfCode": "class StoreConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"store\"\n    def ready(self) -> None:\n        import store.signals.handlers",
        "detail": "python-django-with-mosh.python-django.storefront.store.apps",
        "documentation": {}
    },
    {
        "label": "Promotion",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class Promotion(models.Model):\n    description = models.CharField(max_length=255)\n    discount = models.FloatField()\nclass Collection(models.Model):\n    title = models.CharField(max_length=255)\n    featured_product = models.ForeignKey(\"Product\", on_delete=models.SET_NULL, null=True, related_name=\"+\")\n    def __str__(self) -> str:\n        return self.title\n    class Meta:\n        ordering = [\"title\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Collection",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class Collection(models.Model):\n    title = models.CharField(max_length=255)\n    featured_product = models.ForeignKey(\"Product\", on_delete=models.SET_NULL, null=True, related_name=\"+\")\n    def __str__(self) -> str:\n        return self.title\n    class Meta:\n        ordering = [\"title\"]\nclass Product(models.Model):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField()",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class Product(models.Model):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField()\n    description = models.TextField(null=True, blank=True)\n    unit_price = models.DecimalField(max_digits=6, decimal_places=2, validators=[MinValueValidator(1)])\n    inventory = models.IntegerField()\n    last_update = models.DateTimeField(auto_now=True)\n    collection = models.ForeignKey(Collection, on_delete=models.PROTECT)\n    promotions = models.ManyToManyField(Promotion, blank=True)\n    def __str__(self) -> str:",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "ProductImage",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class ProductImage(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name=\"images\")\n    image = models.ImageField(upload_to=\"store/images\", validators=[validate_file_size])\nclass Customer(models.Model):\n    MEMBERSHIP_BRONZE = \"B\"\n    MEMBERSHIP_SILVER = \"S\"\n    MEMBERSHIP_GOLD = \"G\"\n    MEMBERSHIP_CHOICES = [\n        (MEMBERSHIP_BRONZE, \"Bronze\"),\n        (MEMBERSHIP_SILVER, \"Silver\"),",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class Customer(models.Model):\n    MEMBERSHIP_BRONZE = \"B\"\n    MEMBERSHIP_SILVER = \"S\"\n    MEMBERSHIP_GOLD = \"G\"\n    MEMBERSHIP_CHOICES = [\n        (MEMBERSHIP_BRONZE, \"Bronze\"),\n        (MEMBERSHIP_SILVER, \"Silver\"),\n        (MEMBERSHIP_GOLD, \"Gold\"),\n    ]\n    phone = models.CharField(max_length=255)",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class Order(models.Model):\n    PAYMENT_STATUS_PENDING = \"P\"\n    PAYMENT_STATUS_COMPLETE = \"C\"\n    PAYMENT_STATUS_FAILED = \"F\"\n    PAYMENT_STATUS_CHOICES = [\n        (PAYMENT_STATUS_PENDING, \"Pending\"),\n        (PAYMENT_STATUS_COMPLETE, \"Complete\"),\n        (PAYMENT_STATUS_FAILED, \"Failed\"),\n    ]\n    id = models.AutoField(primary_key=True)",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class OrderItem(models.Model):\n    order = models.ForeignKey(Order, on_delete=models.PROTECT, related_name=\"items\")\n    product = models.ForeignKey(Product, on_delete=models.PROTECT, related_name=\"orderitems\")\n    quantity = models.PositiveSmallIntegerField()\n    unit_price = models.DecimalField(max_digits=6, decimal_places=2)\nclass Address(models.Model):\n    street = models.CharField(max_length=255)\n    city = models.CharField(max_length=255)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\nclass Cart(models.Model):",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class Address(models.Model):\n    street = models.CharField(max_length=255)\n    city = models.CharField(max_length=255)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\nclass Cart(models.Model):\n    id = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    created_at = models.DateTimeField(auto_now_add=True)\nclass CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE, related_name=\"items\")\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class Cart(models.Model):\n    id = models.UUIDField(default=uuid.uuid4, primary_key=True, editable=False)\n    created_at = models.DateTimeField(auto_now_add=True)\nclass CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE, related_name=\"items\")\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.PositiveSmallIntegerField(validators=[MinValueValidator(1)])\n    # unique contraint, prevent creating new instances of the same model (e.g. adding the same product will only increase the quantity, not creating duplicates of the same product)\n    class Meta:\n        unique_together = [[\"cart\", \"product\"]]",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE, related_name=\"items\")\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.PositiveSmallIntegerField(validators=[MinValueValidator(1)])\n    # unique contraint, prevent creating new instances of the same model (e.g. adding the same product will only increase the quantity, not creating duplicates of the same product)\n    class Meta:\n        unique_together = [[\"cart\", \"product\"]]\nclass Review(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name=\"reviews\")\n    name = models.CharField(max_length=255)",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.models",
        "description": "python-django-with-mosh.python-django.storefront.store.models",
        "peekOfCode": "class Review(models.Model):\n    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name=\"reviews\")\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    date = models.DateField(auto_now_add=True)",
        "detail": "python-django-with-mosh.python-django.storefront.store.models",
        "documentation": {}
    },
    {
        "label": "DefaultPagination",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.pagination",
        "description": "python-django-with-mosh.python-django.storefront.store.pagination",
        "peekOfCode": "class DefaultPagination(PageNumberPagination):\n    page_size = 10",
        "detail": "python-django-with-mosh.python-django.storefront.store.pagination",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.permissions",
        "description": "python-django-with-mosh.python-django.storefront.store.permissions",
        "peekOfCode": "class IsAdminOrReadOnly(permissions.BasePermission):\n    def has_permission(self, request, view):\n        if request.method in permissions.SAFE_METHODS:  # options, head, get\n            return True\n        return bool(request.user and request.user.is_staff)\nclass FullDjangoModelPermissions(permissions.DjangoModelPermissions):\n    def __init__(self) -> None:\n        self.perms_map[\"GET\"] = [\"%(app_label)s.view_%(model_name)s\"]\nclass ViewCustomerHistoryPermission(permissions.BasePermission):\n    def has_permission(self, request, view):",
        "detail": "python-django-with-mosh.python-django.storefront.store.permissions",
        "documentation": {}
    },
    {
        "label": "FullDjangoModelPermissions",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.permissions",
        "description": "python-django-with-mosh.python-django.storefront.store.permissions",
        "peekOfCode": "class FullDjangoModelPermissions(permissions.DjangoModelPermissions):\n    def __init__(self) -> None:\n        self.perms_map[\"GET\"] = [\"%(app_label)s.view_%(model_name)s\"]\nclass ViewCustomerHistoryPermission(permissions.BasePermission):\n    def has_permission(self, request, view):\n        return request.user.has_perm(\"store.view_history\")",
        "detail": "python-django-with-mosh.python-django.storefront.store.permissions",
        "documentation": {}
    },
    {
        "label": "ViewCustomerHistoryPermission",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.permissions",
        "description": "python-django-with-mosh.python-django.storefront.store.permissions",
        "peekOfCode": "class ViewCustomerHistoryPermission(permissions.BasePermission):\n    def has_permission(self, request, view):\n        return request.user.has_perm(\"store.view_history\")",
        "detail": "python-django-with-mosh.python-django.storefront.store.permissions",
        "documentation": {}
    },
    {
        "label": "CollectionSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class CollectionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Collection\n        fields = [\"id\", \"title\", \"products_count\"]\n    products_count = serializers.IntegerField()\nclass ProductImageSerializer(serializers.ModelSerializer):\n    def create(self, validated_data):\n        product_id = self.context[\"product_id\"]\n        return ProductImage.objects.create(product_id=product_id, **validated_data)\n    class Meta:",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductImageSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class ProductImageSerializer(serializers.ModelSerializer):\n    def create(self, validated_data):\n        product_id = self.context[\"product_id\"]\n        return ProductImage.objects.create(product_id=product_id, **validated_data)\n    class Meta:\n        model = ProductImage\n        fields = [\"id\", \"image\"]\nclass ProductSerializer(serializers.ModelSerializer):\n    images = ProductImageSerializer(many=True, read_only=True)\n    class Meta:",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class ProductSerializer(serializers.ModelSerializer):\n    images = ProductImageSerializer(many=True, read_only=True)\n    class Meta:\n        model = Product\n        fields = [\n            \"id\",\n            \"title\",\n            \"slug\",\n            \"inventory\",\n            \"description\",",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Review\n        fields = [\"id\", \"date\", \"name\", \"description\"]\n    def create(self, validated_data):\n        product_id = self.context[\"product_id\"]\n        return Review.objects.create(product_id=product_id, **validated_data)\nclass SimpleProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "SimpleProductSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class SimpleProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = [\"id\", \"title\", \"unit_price\"]\nclass CartItemSerializer(serializers.ModelSerializer):\n    product = SimpleProductSerializer()  # to show product with more details\n    total_price = serializers.SerializerMethodField()\n    def get_total_price(self, cart_item: CartItem):\n        return cart_item.quantity * cart_item.product.unit_price\n    class Meta:",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "CartItemSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class CartItemSerializer(serializers.ModelSerializer):\n    product = SimpleProductSerializer()  # to show product with more details\n    total_price = serializers.SerializerMethodField()\n    def get_total_price(self, cart_item: CartItem):\n        return cart_item.quantity * cart_item.product.unit_price\n    class Meta:\n        model = CartItem\n        fields = [\"id\", \"product\", \"quantity\", \"total_price\"]\nclass CartSerializer(serializers.ModelSerializer):\n    id = serializers.UUIDField(read_only=True)",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    id = serializers.UUIDField(read_only=True)\n    items = CartItemSerializer(many=True, read_only=True)\n    total_price = serializers.SerializerMethodField()\n    def get_total_price(self, cart):\n        # list comprehension\n        return sum([item.quantity * item.product.unit_price for item in cart.items.all()])\n    class Meta:\n        model = Cart\n        fields = [\"id\", \"items\", \"total_price\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "AddCartItemSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class AddCartItemSerializer(serializers.ModelSerializer):\n    product_id = serializers.IntegerField()  # we have to define this field because it's dynamically generated\n    # validate input\n    # convention validate_FIELD_NAME()\n    def validate_product_id(self, value):\n        if not Product.objects.filter(pk=value).exists():\n            raise serializers.ValidationError(\"No product with given ID\")\n        return value\n    def save(self, **kwargs):\n        cart_id = self.context[\"cart_id\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateCartItemSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class UpdateCartItemSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CartItem\n        fields = [\"quantity\"]\nclass CustomerSerializer(serializers.ModelSerializer):\n    user_id = serializers.IntegerField(read_only=True)\n    class Meta:\n        model = Customer\n        fields = [\"id\", \"user_id\", \"phone\", \"birth_date\", \"membership\"]\nclass OrderItemSerializer(serializers.ModelSerializer):",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "CustomerSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class CustomerSerializer(serializers.ModelSerializer):\n    user_id = serializers.IntegerField(read_only=True)\n    class Meta:\n        model = Customer\n        fields = [\"id\", \"user_id\", \"phone\", \"birth_date\", \"membership\"]\nclass OrderItemSerializer(serializers.ModelSerializer):\n    product = SimpleProductSerializer()\n    class Meta:\n        model = OrderItem\n        fields = [\"id\", \"product\", \"unit_price\", \"quantity\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "OrderItemSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class OrderItemSerializer(serializers.ModelSerializer):\n    product = SimpleProductSerializer()\n    class Meta:\n        model = OrderItem\n        fields = [\"id\", \"product\", \"unit_price\", \"quantity\"]\nclass OrderSerialier(serializers.ModelSerializer):\n    items = OrderItemSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = [\"id\", \"customer\", \"placed_at\", \"payment_status\", \"items\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "OrderSerialier",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class OrderSerialier(serializers.ModelSerializer):\n    items = OrderItemSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = [\"id\", \"customer\", \"placed_at\", \"payment_status\", \"items\"]\nclass UpdateOrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = [\"payment_status\"]\nclass CreateOrderSerializer(serializers.Serializer):",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateOrderSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class UpdateOrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = [\"payment_status\"]\nclass CreateOrderSerializer(serializers.Serializer):\n    cart_id = serializers.UUIDField()\n    def validate_cart_id(self, cart_id):\n        if not Cart.objects.filter(pk=cart_id).exists():\n            raise serializers.ValidationError(\"No cart with the given ID was found\")\n        if CartItem.objects.filter(cart_id=cart_id).count() == 0:",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "CreateOrderSerializer",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.serializers",
        "description": "python-django-with-mosh.python-django.storefront.store.serializers",
        "peekOfCode": "class CreateOrderSerializer(serializers.Serializer):\n    cart_id = serializers.UUIDField()\n    def validate_cart_id(self, cart_id):\n        if not Cart.objects.filter(pk=cart_id).exists():\n            raise serializers.ValidationError(\"No cart with the given ID was found\")\n        if CartItem.objects.filter(cart_id=cart_id).count() == 0:\n            raise serializers.ValidationError(\"The cart is empty\")\n        return cart_id\n    def save(self, **kwargs):\n        with transaction.atomic():",
        "detail": "python-django-with-mosh.python-django.storefront.store.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.store.urls",
        "description": "python-django-with-mosh.python-django.storefront.store.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register(\"products\", views.ProductViewSet, basename=\"products\")\nrouter.register(\"collections\", views.CollectionViewSet)\nrouter.register(\"carts\", views.CartViewSet, basename=\"carts\")\nrouter.register(\"customers\", views.CustomerViewSet)\nrouter.register(\"orders\", views.OrderViewSet, basename=\"orders\")\n# creating child routers\n# 1st param: parent router, 2nd param: parent prefix, 3rd param: lookup param\nproducts_router = routers.NestedDefaultRouter(router, \"products\", lookup=\"product\")\n# register child resource",
        "detail": "python-django-with-mosh.python-django.storefront.store.urls",
        "documentation": {}
    },
    {
        "label": "products_router",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.store.urls",
        "description": "python-django-with-mosh.python-django.storefront.store.urls",
        "peekOfCode": "products_router = routers.NestedDefaultRouter(router, \"products\", lookup=\"product\")\n# register child resource\n# 1st arg: specify prefix, 2nd: ViewSet, 3rd: basename for generating URL patterns\nproducts_router.register(\"reviews\", views.ReviewViewSet, basename=\"product-reviews\")\nproducts_router.register(\"images\", views.ProductImageViewSet, basename=\"product-images\")\ncarts_router = routers.NestedDefaultRouter(router, \"carts\", lookup=\"cart\")\ncarts_router.register(\"items\", views.CartItemViewSet, basename=\"cart-items\")\n# Compbine parent and child urls\nurlpatterns = router.urls + products_router.urls + carts_router.urls",
        "detail": "python-django-with-mosh.python-django.storefront.store.urls",
        "documentation": {}
    },
    {
        "label": "carts_router",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.store.urls",
        "description": "python-django-with-mosh.python-django.storefront.store.urls",
        "peekOfCode": "carts_router = routers.NestedDefaultRouter(router, \"carts\", lookup=\"cart\")\ncarts_router.register(\"items\", views.CartItemViewSet, basename=\"cart-items\")\n# Compbine parent and child urls\nurlpatterns = router.urls + products_router.urls + carts_router.urls",
        "detail": "python-django-with-mosh.python-django.storefront.store.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.store.urls",
        "description": "python-django-with-mosh.python-django.storefront.store.urls",
        "peekOfCode": "urlpatterns = router.urls + products_router.urls + carts_router.urls",
        "detail": "python-django-with-mosh.python-django.storefront.store.urls",
        "documentation": {}
    },
    {
        "label": "validate_file_size",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.store.validators",
        "description": "python-django-with-mosh.python-django.storefront.store.validators",
        "peekOfCode": "def validate_file_size(file):\n    max_size_kb = 1000\n    if file.size > max_size_kb * 1024:\n        raise ValidationError(f\"File cannot be larger than {max_size_kb}KB\")",
        "detail": "python-django-with-mosh.python-django.storefront.store.validators",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.views",
        "description": "python-django-with-mosh.python-django.storefront.store.views",
        "peekOfCode": "class ProductViewSet(ModelViewSet):\n    queryset = Product.objects.prefetch_related(\"images\").all()\n    serializer_class = ProductSerializer\n    filter_backends = [DjangoFilterBackend, SearchFilter, OrderingFilter]\n    # specify fields used for filtering\n    filterset_fields = [\"collection_id\", \"unit_price\"]\n    # filterset_class = ProductFilter\n    pagination_class = DefaultPagination\n    permission_classes = [IsAdminOrReadOnly]\n    search_fields = [\"title\", \"description\"]",
        "detail": "python-django-with-mosh.python-django.storefront.store.views",
        "documentation": {}
    },
    {
        "label": "CollectionViewSet",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.views",
        "description": "python-django-with-mosh.python-django.storefront.store.views",
        "peekOfCode": "class CollectionViewSet(ModelViewSet):\n    queryset = Collection.objects.annotate(products_count=Count(\"product\")).all()\n    serializer_class = CollectionSerializer\n    permission_classes = [IsAdminOrReadOnly]\n    def destroy(self, request, *args, **kwargs):\n        if Product.objects.filter(collection_id=kwargs[\"pk\"]).count() > 0:\n            return Response(\n                {\"error\": \"Collection cannot be deleded\"},  # proper error message\n                status=status.HTTP_405_METHOD_NOT_ALLOWED,\n            )",
        "detail": "python-django-with-mosh.python-django.storefront.store.views",
        "documentation": {}
    },
    {
        "label": "ReviewViewSet",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.views",
        "description": "python-django-with-mosh.python-django.storefront.store.views",
        "peekOfCode": "class ReviewViewSet(ModelViewSet):\n    # queryset = Review.objects.all()\n    def get_queryset(self):\n        return Review.objects.filter(product_id=self.kwargs[\"product_pk\"])\n    serializer_class = ReviewSerializer\n    def get_serializer_context(self):\n        return {\"product_id\": self.kwargs[\"product_pk\"]}\nclass CartViewSet(CreateModelMixin, GenericViewSet, RetrieveModelMixin, DestroyModelMixin):\n    queryset = Cart.objects.prefetch_related(\"items__product\").all()\n    serializer_class = CartSerializer",
        "detail": "python-django-with-mosh.python-django.storefront.store.views",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.views",
        "description": "python-django-with-mosh.python-django.storefront.store.views",
        "peekOfCode": "class CartViewSet(CreateModelMixin, GenericViewSet, RetrieveModelMixin, DestroyModelMixin):\n    queryset = Cart.objects.prefetch_related(\"items__product\").all()\n    serializer_class = CartSerializer\nclass CartItemViewSet(ModelViewSet):\n    # methods allowed at this endpoint\n    http_method_names = [\"get\", \"post\", \"patch\", \"delete\"]\n    # return serializer class dynamically based on request\n    def get_serializer_class(self):\n        if self.request.method == \"POST\":\n            return AddCartItemSerializer",
        "detail": "python-django-with-mosh.python-django.storefront.store.views",
        "documentation": {}
    },
    {
        "label": "CartItemViewSet",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.views",
        "description": "python-django-with-mosh.python-django.storefront.store.views",
        "peekOfCode": "class CartItemViewSet(ModelViewSet):\n    # methods allowed at this endpoint\n    http_method_names = [\"get\", \"post\", \"patch\", \"delete\"]\n    # return serializer class dynamically based on request\n    def get_serializer_class(self):\n        if self.request.method == \"POST\":\n            return AddCartItemSerializer\n        elif self.request.method == \"PATCH\":\n            return UpdateCartItemSerializer\n        return CartItemSerializer",
        "detail": "python-django-with-mosh.python-django.storefront.store.views",
        "documentation": {}
    },
    {
        "label": "CustomerViewSet",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.views",
        "description": "python-django-with-mosh.python-django.storefront.store.views",
        "peekOfCode": "class CustomerViewSet(ModelViewSet):\n    queryset = Customer.objects.all()\n    serializer_class = CustomerSerializer\n    # permission_classes = [IsAuthenticated]  # views closed for anonymous users\n    permission_classes = [IsAdminUser]\n    # def get_permissions(self):\n    #     if self.request.method == \"GET\":\n    #         return [AllowAny()]  # anyone can retrieve\n    #     return [IsAuthenticated()]  # only authenticated users can update/create\n    @action(detail=True, permission_classes=[ViewCustomerHistoryPermission])",
        "detail": "python-django-with-mosh.python-django.storefront.store.views",
        "documentation": {}
    },
    {
        "label": "OrderViewSet",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.views",
        "description": "python-django-with-mosh.python-django.storefront.store.views",
        "peekOfCode": "class OrderViewSet(ModelViewSet):\n    # serializer_class = OrderSerialier\n    # permission_classes = [IsAuthenticated]\n    http_method_names = [\"get\", \"patch\", \"post\", \"delete\", \"head\", \"options\"]\n    def get_permissions(self):\n        if self.request.method in [\"PATCH\", \"DELETE\"]:\n            return [IsAdminUser()]\n        return [IsAuthenticated()]\n    def create(self, request, *args, **kwargs):\n        serializer = CreateOrderSerializer(data=request.data, context={\"user_id\": self.request.user.id})",
        "detail": "python-django-with-mosh.python-django.storefront.store.views",
        "documentation": {}
    },
    {
        "label": "ProductImageViewSet",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.store.views",
        "description": "python-django-with-mosh.python-django.storefront.store.views",
        "peekOfCode": "class ProductImageViewSet(ModelViewSet):\n    serializer_class = ProductImageSerializer\n    def get_serializer_context(self):\n        return {\"product_id\": self.kwargs[\"product_pk\"]}\n    def get_queryset(self):\n        return ProductImage.objects.filter(product_id=self.kwargs[\"product_pk\"])",
        "detail": "python-django-with-mosh.python-django.storefront.store.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.asgi",
        "description": "python-django-with-mosh.python-django.storefront.storefront.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.asgi",
        "documentation": {}
    },
    {
        "label": "celery",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.celery",
        "description": "python-django-with-mosh.python-django.storefront.storefront.celery",
        "peekOfCode": "celery = Celery(\"storefront\")  # name of celery\n# where celery can find config variables\n# 1 arg: go to Django conf and load settings object\n# 2 arg: define namespace, all config settings should start with the value we set, in this case CELERY\ncelery.config_from_object(\"django.conf:settings\", namespace=\"CELERY\")\n# instruct celery to discover tasks\ncelery.autodiscover_tasks()",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.celery",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-r!t_mw!*#w&09il0ma9smx33jp0pctg4p@^bdaxlqu2*cy=(f)\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-r!t_mw!*#w&09il0ma9smx33jp0pctg4p@^bdaxlqu2*cy=(f)\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.sessions\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.sessions\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.sessions\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"django_filters\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.sessions\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"django_filters\",\n    \"corsheaders\",\n    \"rest_framework\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "ROOT_URLCONF = \"storefront.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "WSGI_APPLICATION = \"storefront.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": \"storefront\",\n        \"HOST\": \"localhost\",\n        \"USER\": \"postgres\",\n        \"PASSWORD\": \"HankaDS\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": \"storefront\",\n        \"HOST\": \"localhost\",\n        \"USER\": \"postgres\",\n        \"PASSWORD\": \"HankaDS\",\n        \"PORT\": \"5432\",\n    }\n}",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nMEDIA_URL = \"/media/\"  # endpoint\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")  # BASE_DIR == current dir\n# Default primary key field type",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nMEDIA_URL = \"/media/\"  # endpoint\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")  # BASE_DIR == current dir\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nMEDIA_URL = \"/media/\"  # endpoint\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")  # BASE_DIR == current dir\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"static/\"\nMEDIA_URL = \"/media/\"  # endpoint\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")  # BASE_DIR == current dir\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nINTERNAL_IPS = [\"127.0.0.1\"]",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\nMEDIA_URL = \"/media/\"  # endpoint\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")  # BASE_DIR == current dir\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nINTERNAL_IPS = [\"127.0.0.1\"]\nCORS_ALLOWED_ORIGINS = [\"http://localhost:8001\", \"http://127.0.0.1:8001\"]\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "MEDIA_URL = \"/media/\"  # endpoint\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")  # BASE_DIR == current dir\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nINTERNAL_IPS = [\"127.0.0.1\"]\nCORS_ALLOWED_ORIGINS = [\"http://localhost:8001\", \"http://127.0.0.1:8001\"]\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.PageNumberPagination\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")  # BASE_DIR == current dir\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nINTERNAL_IPS = [\"127.0.0.1\"]\nCORS_ALLOWED_ORIGINS = [\"http://localhost:8001\", \"http://127.0.0.1:8001\"]\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.PageNumberPagination\",\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.LimitOffsetPagination\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nINTERNAL_IPS = [\"127.0.0.1\"]\nCORS_ALLOWED_ORIGINS = [\"http://localhost:8001\", \"http://127.0.0.1:8001\"]\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.PageNumberPagination\",\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.LimitOffsetPagination\",\n    # \"PAGE_SIZE\": 10,\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\"rest_framework_simplejwt.authentication.JWTAuthentication\",),\n    \"DEFAULT_PERMISSION_CLASSES\": [",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "INTERNAL_IPS = [\"127.0.0.1\"]\nCORS_ALLOWED_ORIGINS = [\"http://localhost:8001\", \"http://127.0.0.1:8001\"]\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.PageNumberPagination\",\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.LimitOffsetPagination\",\n    # \"PAGE_SIZE\": 10,\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\"rest_framework_simplejwt.authentication.JWTAuthentication\",),\n    \"DEFAULT_PERMISSION_CLASSES\": [\n        \"rest_framework.permissions.IsAuthenticated\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\"http://localhost:8001\", \"http://127.0.0.1:8001\"]\nREST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.PageNumberPagination\",\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.LimitOffsetPagination\",\n    # \"PAGE_SIZE\": 10,\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\"rest_framework_simplejwt.authentication.JWTAuthentication\",),\n    \"DEFAULT_PERMISSION_CLASSES\": [\n        \"rest_framework.permissions.IsAuthenticated\",\n        \"rest_framework.permissions.AllowAny\",",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"COERCE_DECIMAL_TO_STRING\": False,\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.PageNumberPagination\",\n    # \"DEFAULT_PAGINATION_CLASS\": \"rest_framework.pagination.LimitOffsetPagination\",\n    # \"PAGE_SIZE\": 10,\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\"rest_framework_simplejwt.authentication.JWTAuthentication\",),\n    \"DEFAULT_PERMISSION_CLASSES\": [\n        \"rest_framework.permissions.IsAuthenticated\",\n        \"rest_framework.permissions.AllowAny\",\n    ],",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"core.User\"\nDJOSER = {\n    \"SERIALIZERS\": {\n        \"user_create\": \"core.serializers.UserCreateSerializer\",\n    },\n    \"SERIALIZERS\": {\n        \"current_user\": \"core.serializers.UserSerializer\",\n    },\n}\nSIMPLE_JWT = {",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "DJOSER = {\n    \"SERIALIZERS\": {\n        \"user_create\": \"core.serializers.UserCreateSerializer\",\n    },\n    \"SERIALIZERS\": {\n        \"current_user\": \"core.serializers.UserSerializer\",\n    },\n}\nSIMPLE_JWT = {\n    \"AUTH_HEADER_TYPES\": (\"JWT\",),",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"AUTH_HEADER_TYPES\": (\"JWT\",),\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),\n}\nEMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = \"localhost\"\nEMAIL_HOST_USER = \"\"\nEMAIL_HOST_PASSWORD = \"\"\nEMAIL_PORT = 2525  # usually 25 in production\nDEFAULT_FROM_EMAIL = \"hankawork@gmail.com\"",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\nEMAIL_HOST = \"localhost\"\nEMAIL_HOST_USER = \"\"\nEMAIL_HOST_PASSWORD = \"\"\nEMAIL_PORT = 2525  # usually 25 in production\nDEFAULT_FROM_EMAIL = \"hankawork@gmail.com\"\nADMINS = [(\"Hanka\", \"hankawork@gmail.com\")]\nCELERY_BROKER_URL = \"redis://localhost:6379/1\"  # localhost/database\nCELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "EMAIL_HOST = \"localhost\"\nEMAIL_HOST_USER = \"\"\nEMAIL_HOST_PASSWORD = \"\"\nEMAIL_PORT = 2525  # usually 25 in production\nDEFAULT_FROM_EMAIL = \"hankawork@gmail.com\"\nADMINS = [(\"Hanka\", \"hankawork@gmail.com\")]\nCELERY_BROKER_URL = \"redis://localhost:6379/1\"  # localhost/database\nCELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function\n        \"task\": \"playground.tasks.notify_customers\",  # path to the function",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "EMAIL_HOST_USER = \"\"\nEMAIL_HOST_PASSWORD = \"\"\nEMAIL_PORT = 2525  # usually 25 in production\nDEFAULT_FROM_EMAIL = \"hankawork@gmail.com\"\nADMINS = [(\"Hanka\", \"hankawork@gmail.com\")]\nCELERY_BROKER_URL = \"redis://localhost:6379/1\"  # localhost/database\nCELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function\n        \"task\": \"playground.tasks.notify_customers\",  # path to the function\n        # 'schedule': 15 * 60 # by default in seconds, we have to convert",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = \"\"\nEMAIL_PORT = 2525  # usually 25 in production\nDEFAULT_FROM_EMAIL = \"hankawork@gmail.com\"\nADMINS = [(\"Hanka\", \"hankawork@gmail.com\")]\nCELERY_BROKER_URL = \"redis://localhost:6379/1\"  # localhost/database\nCELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function\n        \"task\": \"playground.tasks.notify_customers\",  # path to the function\n        # 'schedule': 15 * 60 # by default in seconds, we have to convert\n        # to have more control over schedule, set specific day and time",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "EMAIL_PORT = 2525  # usually 25 in production\nDEFAULT_FROM_EMAIL = \"hankawork@gmail.com\"\nADMINS = [(\"Hanka\", \"hankawork@gmail.com\")]\nCELERY_BROKER_URL = \"redis://localhost:6379/1\"  # localhost/database\nCELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function\n        \"task\": \"playground.tasks.notify_customers\",  # path to the function\n        # 'schedule': 15 * 60 # by default in seconds, we have to convert\n        # to have more control over schedule, set specific day and time\n        # 'schedule': crontab(minute='*/15'), # every 15 min",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FROM_EMAIL",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "DEFAULT_FROM_EMAIL = \"hankawork@gmail.com\"\nADMINS = [(\"Hanka\", \"hankawork@gmail.com\")]\nCELERY_BROKER_URL = \"redis://localhost:6379/1\"  # localhost/database\nCELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function\n        \"task\": \"playground.tasks.notify_customers\",  # path to the function\n        # 'schedule': 15 * 60 # by default in seconds, we have to convert\n        # to have more control over schedule, set specific day and time\n        # 'schedule': crontab(minute='*/15'), # every 15 min\n        # \"schedule\": crontab(day_of_week=1, hour=7, minute=30),",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "ADMINS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "ADMINS = [(\"Hanka\", \"hankawork@gmail.com\")]\nCELERY_BROKER_URL = \"redis://localhost:6379/1\"  # localhost/database\nCELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function\n        \"task\": \"playground.tasks.notify_customers\",  # path to the function\n        # 'schedule': 15 * 60 # by default in seconds, we have to convert\n        # to have more control over schedule, set specific day and time\n        # 'schedule': crontab(minute='*/15'), # every 15 min\n        # \"schedule\": crontab(day_of_week=1, hour=7, minute=30),\n        \"schedule\": 5,",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_BROKER_URL",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "CELERY_BROKER_URL = \"redis://localhost:6379/1\"  # localhost/database\nCELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function\n        \"task\": \"playground.tasks.notify_customers\",  # path to the function\n        # 'schedule': 15 * 60 # by default in seconds, we have to convert\n        # to have more control over schedule, set specific day and time\n        # 'schedule': crontab(minute='*/15'), # every 15 min\n        # \"schedule\": crontab(day_of_week=1, hour=7, minute=30),\n        \"schedule\": 5,\n        \"args\": [\"Hello World\"],",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_BEAT_SCHEDULE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "peekOfCode": "CELERY_BEAT_SCHEDULE = {\n    \"notify_customers\": {  # name of the schedule, for consistency, use the name of the function\n        \"task\": \"playground.tasks.notify_customers\",  # path to the function\n        # 'schedule': 15 * 60 # by default in seconds, we have to convert\n        # to have more control over schedule, set specific day and time\n        # 'schedule': crontab(minute='*/15'), # every 15 min\n        # \"schedule\": crontab(day_of_week=1, hour=7, minute=30),\n        \"schedule\": 5,\n        \"args\": [\"Hello World\"],\n    }",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "description": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "peekOfCode": "admin.site.site_header = \"Storefront admin\"\nadmin.site.index_title = \"Admin Hanka\"\nurlpatterns = [\n    path(\"\", include(\"core.urls\")),\n    path(\"admin/\", admin.site.urls),\n    path(\"playground/\", include(\"playground.urls\")),\n    path(\"store/\", include(\"store.urls\")),\n    path(\"auth/\", include(\"djoser.urls\")),\n    path(\"auth/\", include(\"djoser.urls.jwt\")),\n    path(\"__debug__/\", include(debug_toolbar.urls)),",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "description": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "peekOfCode": "admin.site.index_title = \"Admin Hanka\"\nurlpatterns = [\n    path(\"\", include(\"core.urls\")),\n    path(\"admin/\", admin.site.urls),\n    path(\"playground/\", include(\"playground.urls\")),\n    path(\"store/\", include(\"store.urls\")),\n    path(\"auth/\", include(\"djoser.urls\")),\n    path(\"auth/\", include(\"djoser.urls.jwt\")),\n    path(\"__debug__/\", include(debug_toolbar.urls)),\n]",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "description": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", include(\"core.urls\")),\n    path(\"admin/\", admin.site.urls),\n    path(\"playground/\", include(\"playground.urls\")),\n    path(\"store/\", include(\"store.urls\")),\n    path(\"auth/\", include(\"djoser.urls\")),\n    path(\"auth/\", include(\"djoser.urls.jwt\")),\n    path(\"__debug__/\", include(debug_toolbar.urls)),\n]\n# approach recommended for dev environment",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django.storefront.storefront.wsgi",
        "description": "python-django-with-mosh.python-django.storefront.storefront.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "python-django-with-mosh.python-django.storefront.storefront.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.tags.migrations.0001_initial",
        "description": "python-django-with-mosh.python-django.storefront.tags.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"contenttypes\", \"0002_remove_content_type_name\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Tag\",\n            fields=[\n                (",
        "detail": "python-django-with-mosh.python-django.storefront.tags.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TagAdmin",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.tags.admin",
        "description": "python-django-with-mosh.python-django.storefront.tags.admin",
        "peekOfCode": "class TagAdmin(admin.ModelAdmin):\n    search_fields = [\"label\"]\nadmin.site.register(Tag, TagAdmin)",
        "detail": "python-django-with-mosh.python-django.storefront.tags.admin",
        "documentation": {}
    },
    {
        "label": "TagsConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.tags.apps",
        "description": "python-django-with-mosh.python-django.storefront.tags.apps",
        "peekOfCode": "class TagsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"tags\"",
        "detail": "python-django-with-mosh.python-django.storefront.tags.apps",
        "documentation": {}
    },
    {
        "label": "TaggedItemManager",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.tags.models",
        "description": "python-django-with-mosh.python-django.storefront.tags.models",
        "peekOfCode": "class TaggedItemManager(models.Manager):\n    def get_tags_for(self, obj_type, obj_id):\n        content_type = ContentType.objects.get_for_model(obj_type)\n        return TaggedItem.objects.select_related(\"tag\").filter(\n            content_type=content_type, object_id=obj_id\n        )\n# Create your models here.\nclass Tag(models.Model):\n    label = models.CharField(max_length=255)\n    def __str__(self) -> str:",
        "detail": "python-django-with-mosh.python-django.storefront.tags.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.tags.models",
        "description": "python-django-with-mosh.python-django.storefront.tags.models",
        "peekOfCode": "class Tag(models.Model):\n    label = models.CharField(max_length=255)\n    def __str__(self) -> str:\n        return self.label\nclass TaggedItem(models.Model):\n    objects = TaggedItemManager()\n    # What tag is applied to what object\n    tag = models.ForeignKey(Tag, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()",
        "detail": "python-django-with-mosh.python-django.storefront.tags.models",
        "documentation": {}
    },
    {
        "label": "TaggedItem",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django.storefront.tags.models",
        "description": "python-django-with-mosh.python-django.storefront.tags.models",
        "peekOfCode": "class TaggedItem(models.Model):\n    objects = TaggedItemManager()\n    # What tag is applied to what object\n    tag = models.ForeignKey(Tag, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey()",
        "detail": "python-django-with-mosh.python-django.storefront.tags.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django.storefront.manage",
        "description": "python-django-with-mosh.python-django.storefront.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'storefront.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "python-django-with-mosh.python-django.storefront.manage",
        "documentation": {}
    },
    {
        "label": "PlaygroundConfig",
        "kind": 6,
        "importPath": "python-django-with-mosh.python-django_git.storefront.playground.apps",
        "description": "python-django-with-mosh.python-django_git.storefront.playground.apps",
        "peekOfCode": "class PlaygroundConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'playground'",
        "detail": "python-django-with-mosh.python-django_git.storefront.playground.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.playground.urls",
        "description": "python-django-with-mosh.python-django_git.storefront.playground.urls",
        "peekOfCode": "urlpatterns = [\n  # on this URL playground/hello (playground is not mentioned because it was configured in urls.py in the main app already), we refer to function say_hello created earlier in views.py\n  # always end URL with /\n  path('hello/', views.say_hello) \n]",
        "detail": "python-django-with-mosh.python-django_git.storefront.playground.urls",
        "documentation": {}
    },
    {
        "label": "say_hello",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django_git.storefront.playground.views",
        "description": "python-django-with-mosh.python-django_git.storefront.playground.views",
        "peekOfCode": "def say_hello(request):\n  # return HttpResponse('Hello World')\n  # instead of returnning the whole HttpResponse we will render the html from our templates\n  return render(request, 'hello.html', { 'name': 'Hanka'})",
        "detail": "python-django-with-mosh.python-django_git.storefront.playground.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.asgi",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-t0wvn^r6-k9te&4mbz+ck276!*e8k%=lwszq4rc2_x9hn#u%)m'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-t0wvn^r6-k9te&4mbz+ck276!*e8k%=lwszq4rc2_x9hn#u%)m'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.messages',",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'playground',",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'playground',\n    \"debug_toolbar\",",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'playground',\n    \"debug_toolbar\",\n]\nMIDDLEWARE = [",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]\nROOT_URLCONF = 'storefront.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "ROOT_URLCONF = 'storefront.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "WSGI_APPLICATION = 'storefront.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.urls",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    # any URLs starts with playground, should be routed to playground app\n    path('playground/', include('playground.urls')),\n    path('__debug__/', include('debug_toolbar.urls')),\n]",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "python-django-with-mosh.python-django_git.storefront.storefront.wsgi",
        "description": "python-django-with-mosh.python-django_git.storefront.storefront.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "python-django-with-mosh.python-django_git.storefront.storefront.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "python-django-with-mosh.python-django_git.storefront.manage",
        "description": "python-django-with-mosh.python-django_git.storefront.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'storefront.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "python-django-with-mosh.python-django_git.storefront.manage",
        "documentation": {}
    }
]